(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     51397,       1203]
NotebookOptionsPosition[     47124,       1049]
NotebookOutlinePosition[     47699,       1072]
CellTagsIndexPosition[     47611,       1067]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Intro: Mathematica\nFI Giasemis", "Title"]], "Text",
 CellChangeTimes->{{3.686749689696563*^9, 3.686749760936054*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",
 CellChangeTimes->{{3.68674978407162*^9, 3.686749792401574*^9}, {
  3.6867500456608257`*^9, 3.686750046700252*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.686750049534903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", "x"}], "]"}], "*", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.686750071601265*^9, 3.6867501152538443`*^9}, {
  3.6867501605057592`*^9, 3.686750179901772*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Sin", "[", "x", "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.68675008348588*^9, 3.686750116111751*^9}, {
  3.686750167273882*^9, 3.686750180797984*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "x"}], "]"}]}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.686750297167408*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{"2", "*", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", "x"}], "]"}], "*", 
   RowBox[{"Sin", "[", "x", "]"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "x"}], "]"}], "-", 
  RowBox[{"Cos", "[", 
   RowBox[{"4", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.686750230341853*^9}]
}, Open  ]],

Cell["", "WolframAlphaLong",
 CellChangeTimes->{{3.6867502681526737`*^9, 3.686750269022088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.686750275298049*^9},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9n/fP4L///7R/wDmHDFl
       "]]},
     Annotation[#, "Charting`Private`Tag$6786#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {-1.999998978108799, 1.1249970948104415`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.686750186319619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"2", "+", "2"}]}]], "Input",
 CellChangeTimes->{{3.686750329661981*^9, 3.686750331515278*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.6867503327701797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", "5"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.686750334277677*^9, 3.686750335471118*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.686750337148089*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.6867503389050283`*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.6867503393033733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["clear"], "Input",
 CellChangeTimes->{{3.686750342117406*^9, 3.68675036176014*^9}}],

Cell[BoxData["clear"], "Output",
 CellChangeTimes->{3.686750362265416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clear", " ", "x"}]], "Input",
 CellChangeTimes->{{3.6867503734446*^9, 3.686750377225819*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "clear"}]], "Output",
 CellChangeTimes->{3.686750378227701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.686750380128295*^9, 3.686750380245736*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.686750381753083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  FractionBox["2", "5"]]], "Input",
 CellChangeTimes->{{3.686750478169735*^9, 3.686750517212987*^9}}],

Cell[BoxData[
 SqrtBox[
  FractionBox["2", "5"]]], "Output",
 CellChangeTimes->{3.686750517634739*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox[
   FractionBox["2", "5"]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.6324555320336759`"], "Output",
 CellChangeTimes->{3.6867505202271557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", "0.6324555320336759`", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"6.32456\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"-1\"\>"]}],
   0.6324555320336759,
   AutoDelete->True],
  ScientificForm]], "Output",
 CellChangeTimes->{3.6867505237091084`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootApproximant", "[", "0.6324555320336759`", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 SqrtBox[
  FractionBox["2", "5"]]], "Output",
 CellChangeTimes->{3.686750525652534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsolatingInterval", "[", 
  SqrtBox[
   FractionBox["2", "5"]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["5", "8"], ",", 
   FractionBox["81", "128"]}], "}"}]], "Output",
 CellChangeTimes->{3.6867505277327957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["5.4"], "Input",
 CellChangeTimes->{{3.686750530667405*^9, 3.6867505339419327`*^9}}],

Cell[BoxData["5.4`"], "Output",
 CellChangeTimes->{3.6867505353065987`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Rationalize", "[", "5.4`", "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RootApproximant", "[", 
   FractionBox["27", "5"], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6867505703782177`*^9, 3.6867505744620523`*^9}}],

Cell[BoxData[
 FractionBox["27", "5"]], "Output",
 CellChangeTimes->{3.686750576016391*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RootApproximant", "[", "5.4", "]"}], 
  RowBox[{"(*", "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.686750580335697*^9, 3.686750583730465*^9}, 
   3.6867506896180677`*^9}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.686750622101293*^9, 3.686750622506687*^9}}],

Cell[BoxData[
 FractionBox["27", "5"]], "Output",
 CellChangeTimes->{3.686750585357465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"24", "/", "2"}]], "Input",
 CellChangeTimes->{{3.686750604758128*^9, 3.6867506312711887`*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.686750631626539*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"24", "/", "78"}]], "Input",
 CellChangeTimes->{{3.686750634539425*^9, 3.686750640150422*^9}}],

Cell[BoxData[
 FractionBox["4", "13"]], "Output",
 CellChangeTimes->{3.6867506408419*^9}]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.686750743614264*^9}],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.686750791807502*^9, 3.6867507950968*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.686750796677568*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x", ";"}]], "Input",
 CellChangeTimes->{{3.686750798583777*^9, 3.686750798774089*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\[Pi]"], "Input",
 CellChangeTimes->{{3.686750807011384*^9, 3.6867508081419992`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.686750808980732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  RowBox[{"Rationalize", "[", 
   FractionBox[
    RowBox[{"N", "[", "\[Pi]", "]"}], "\[Pi]"], "]"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.6867508181565437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["\[Pi]", "\[Degree]"], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["180.`"], "Output",
 CellChangeTimes->{3.6867508208791647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     FractionBox["\[Pi]", "\[Degree]"], ",", "20"}], "]"}], "clc"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.686750827818553*^9, 3.686750830647656*^9}},
 NumberMarks->False],

Cell[BoxData["179.99999999999999999999999999999999999343`20."], "Output",
 CellChangeTimes->{3.686750822735586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPart", "[", "179.99999999999999999999999999999999999343`20.",
   "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["179"], "Output",
 CellChangeTimes->{3.686750825085168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["clc"], "Input",
 CellChangeTimes->{{3.6867508329705057`*^9, 3.6867508331676683`*^9}}],

Cell[BoxData["clc"], "Output",
 CellChangeTimes->{3.6867508336760683`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "clc", "]"}]], "Input",
 NumberMarks->False],

Cell["Global`clc", "Print", "PrintUsage",
 CellChangeTimes->{3.68675083658456*^9},
 CellTags->"Info393686754436-5508967"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "\[Pi]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.686750908596406*^9, 3.686750933462048*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.686750921272649*^9, 3.68675093436334*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.686750953762656*^9, 3.686750970145426*^9}, {
  3.686751086568565*^9, 3.6867510880950403`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6867510890508757`*^9}]
}, Open  ]],

Cell[BoxData["\[Epsilon]\[CapitalEpsilon]"], "Input",
 CellChangeTimes->{{3.6867510943031054`*^9, 3.686751114828393*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.686750975628407*^9, 3.686750976158166*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.6867509830351*^9, 3.6867510814683228`*^9}},
 EmphasizeSyntaxErrors->True]
},
WindowSize->{808, 674},
WindowMargins->{{290, Automatic}, {Automatic, 11}},
SpellingDictionaries->{"CorrectWords"->{"Giasemis"}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info393686754436-5508967"->{
  Cell[46040, 1012, 121, 2, 43, "Print",
   CellTags->"Info393686754436-5508967"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info393686754436-5508967", 47504, 1061}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 142, 1, 122, "Text"],
Cell[CellGroupData[{
Cell[725, 25, 165, 3, 32, "Input"],
Cell[893, 30, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000, 36, 257, 6, 32, "Input"],
Cell[1260, 44, 258, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1555, 55, 251, 8, 47, "Input"],
Cell[1809, 65, 357, 12, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2203, 82, 199, 6, 32, "Input"],
Cell[2405, 90, 200, 6, 32, "Output"]
}, Open  ]],
Cell[2620, 99, 96, 1, 41, "WolframAlphaLong"],
Cell[CellGroupData[{
Cell[2741, 104, 89, 2, 32, "Input"],
Cell[2833, 108, 36648, 615, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39518, 728, 138, 3, 32, "Input"],
Cell[39659, 733, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39768, 739, 151, 3, 54, "Input"],
Cell[39922, 744, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40029, 750, 71, 1, 32, "Input"],
Cell[40103, 753, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40212, 759, 96, 1, 32, "Input"],
Cell[40311, 762, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40422, 768, 117, 2, 32, "Input"],
Cell[40542, 772, 96, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40675, 779, 128, 2, 54, "Input"],
Cell[40806, 783, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40913, 789, 125, 3, 70, "Input"],
Cell[41041, 794, 102, 3, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41180, 802, 109, 4, 70, "Input"],
Cell[41292, 808, 90, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41419, 814, 106, 2, 32, "Input"],
Cell[41528, 818, 247, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41812, 831, 107, 2, 32, "Input"],
Cell[41922, 835, 102, 3, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42061, 843, 125, 4, 70, "Input"],
Cell[42189, 849, 164, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42390, 859, 97, 1, 32, "Input"],
Cell[42490, 862, 75, 1, 32, "Output"]
}, Open  ]],
Cell[42580, 866, 88, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[42693, 872, 197, 4, 73, InheritFromParent],
Cell[42893, 878, 91, 2, 45, "Output"]
}, Open  ]],
Cell[42999, 883, 225, 5, 54, "Input"],
Cell[CellGroupData[{
Cell[43249, 892, 92, 1, 32, "Input"],
Cell[43344, 895, 91, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43472, 902, 118, 2, 32, "Input"],
Cell[43593, 906, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43701, 912, 117, 2, 32, "Input"],
Cell[43821, 916, 89, 2, 45, "Output"]
}, Open  ]],
Cell[43925, 921, 85, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[44035, 926, 91, 1, 32, "Input"],
Cell[44129, 929, 70, 1, 32, "Output"]
}, Open  ]],
Cell[44214, 933, 110, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[44349, 939, 99, 1, 32, "Input"],
Cell[44451, 942, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44562, 948, 172, 5, 50, "Input"],
Cell[44737, 955, 76, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44850, 961, 108, 3, 42, "Input"],
Cell[44961, 966, 76, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45074, 972, 263, 8, 65, "Input"],
Cell[45340, 982, 115, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45492, 988, 133, 3, 32, "Input"],
Cell[45628, 993, 72, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45737, 999, 99, 1, 32, "Input"],
Cell[45839, 1002, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45950, 1008, 87, 2, 32, "Input"],
Cell[46040, 1012, 121, 2, 43, "Print",
 CellTags->"Info393686754436-5508967"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46198, 1019, 162, 3, 54, "Input"],
Cell[46363, 1024, 93, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46493, 1030, 177, 3, 32, "Input"],
Cell[46673, 1035, 72, 1, 32, "Output"]
}, Open  ]],
Cell[46760, 1039, 121, 1, 32, "Input"],
Cell[46884, 1042, 92, 1, 32, "Input"],
Cell[46979, 1045, 141, 2, 54, "Input"]
}
]
*)

