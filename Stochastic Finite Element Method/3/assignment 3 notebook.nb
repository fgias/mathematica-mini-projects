(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    523243,      10314]
NotebookOptionsPosition[    518092,      10136]
NotebookOutlinePosition[    518590,      10156]
CellTagsIndexPosition[    518547,      10153]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
3rd Assignment: Stochastic FEM
F. I. Giasemis\
\>", "Section",
 CellChangeTimes->{{3.82440410076291*^9, 3.824404141227172*^9}, 
   3.8269005026886544`*^9, {3.826900543834054*^9, 3.8269005560814486`*^9}, {
   3.8302438548905373`*^9, 3.8302438551292915`*^9}}],

Cell[CellGroupData[{

Cell["KL expansion", "Subsection",
 CellChangeTimes->{{3.8244041537656593`*^9, 3.8244041615554757`*^9}, {
  3.8244042354370737`*^9, 3.8244042502610044`*^9}, {3.824404561697462*^9, 
  3.824404574713503*^9}, {3.824842718707263*^9, 3.8248427221026306`*^9}, {
  3.826900530603735*^9, 3.8269005657987614`*^9}, {3.829891181957404*^9, 
  3.8298912738101597`*^9}}],

Cell[CellGroupData[{

Cell["Parameters from the problem", "Subsubsection",
 CellChangeTimes->{{3.824404174389971*^9, 3.82440418200424*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "=", "8"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Number", " ", "of", " ", "terms", " ", "in", " ", "the", " ", "KL", " ", 
    RowBox[{"expansion", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", "5000"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Number", " ", "of", " ", 
    RowBox[{"realizations", "."}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8242940787237053`*^9, 3.8242940832163124`*^9}, {
   3.824294255129635*^9, 3.82429425783442*^9}, {3.824295699040331*^9, 
   3.824295704068333*^9}, {3.8242960418785443`*^9, 3.82429604216885*^9}, {
   3.8242969515296526`*^9, 3.8242969808175764`*^9}, {3.824297804798722*^9, 
   3.8242978134955544`*^9}, {3.824298154496052*^9, 3.824298155468691*^9}, {
   3.8242982124556704`*^9, 3.8242982141963396`*^9}, {3.8242988660922937`*^9, 
   3.8242988695884466`*^9}, {3.8242989922785783`*^9, 3.824299043825535*^9}, {
   3.8242991852219667`*^9, 3.8242991853383045`*^9}, {3.8242993576355906`*^9, 
   3.8242993584756527`*^9}, {3.824299671701188*^9, 3.824299671956438*^9}, {
   3.8242998050449533`*^9, 3.82429980963233*^9}, {3.8243000195556602`*^9, 
   3.8243000206578617`*^9}, {3.8244042196203003`*^9, 3.824404271889758*^9}, {
   3.824460722075488*^9, 3.8244608211783686`*^9}, 3.824460899577813*^9, 
   3.8244622634902325`*^9, 3.824462511054452*^9, {3.824481971378748*^9, 
   3.8244820007007465`*^9}, 3.8258482058904524`*^9, {3.8258483826016035`*^9, 
   3.8258483941481233`*^9}, 3.8258484465256*^9, {3.825848710772273*^9, 
   3.825848714754275*^9}, {3.8258487732577744`*^9, 3.825848796231027*^9}, {
   3.825850060413616*^9, 3.825850087379402*^9}, 3.8298913693517075`*^9, {
   3.8298914330234566`*^9, 3.829891433210878*^9}, {3.8298916204150114`*^9, 
   3.8298916501203766`*^9}, {3.8299013637722616`*^9, 3.829901364865141*^9}, {
   3.829904021392017*^9, 3.829904044399192*^9}, 3.8299040835045414`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues and eigenfunctions for f(x)", "Subsubsection",
 CellChangeTimes->{{3.8244041907812023`*^9, 3.8244042140973735`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"n", "=", "0"}], ",", 
   RowBox[{"n", "<", 
    RowBox[{"M", "/", "2"}]}], ",", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"n", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sol", "=", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "b"}], " ", "-", 
           RowBox[{"x", " ", 
            RowBox[{"Tan", "[", 
             RowBox[{"x", " ", "a"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], " ", 
           RowBox[{"Pi", "/", "a"}]}], "\[LessEqual]", "x", "\[LessEqual]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", 
             RowBox[{"1", "/", "2"}]}], ")"}], " ", 
           RowBox[{"Pi", "/", "a"}]}]}]}], "}"}], ",", "x"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wodd", "[", "n", "]"}], "=", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"x", "/.", "sol"}], ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Lambda]odd", "[", "n", "]"}], "=", 
     RowBox[{"2", 
      RowBox[{"b", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{
           RowBox[{"wodd", "[", "n", "]"}], "^", "2"}], " ", 
          RowBox[{"b", "^", "2"}]}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"codd", "[", "n", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"wodd", "[", "n", "]"}], " ", "a"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"wodd", "[", "n", "]"}]}], ")"}]}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CurlyPhi]odd", "[", "n", "]"}], "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"codd", "[", "n", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"wodd", " ", "[", "n", "]"}], "x"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"sol", "=", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "b"}], " ", 
            RowBox[{"Tan", "[", 
             RowBox[{"x", " ", "a"}], "]"}]}], "+", "x"}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", 
             RowBox[{"1", "/", "2"}]}], ")"}], " ", 
           RowBox[{"Pi", "/", "a"}]}], "\[LessEqual]", "x", "\[LessEqual]", 
          RowBox[{
           RowBox[{"(", "n", ")"}], " ", 
           RowBox[{"Pi", "/", "a"}]}]}]}], "}"}], ",", "x"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"weven", "[", "n", "]"}], "=", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"x", "/.", "sol"}], ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Lambda]even", "[", "n", "]"}], "=", 
     RowBox[{"2", 
      RowBox[{"b", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{
           RowBox[{"weven", "[", "n", "]"}], "^", "2"}], " ", 
          RowBox[{"b", "^", "2"}]}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ceven", "[", "n", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"a", "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"weven", "[", "n", "]"}], " ", "a"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", 
           RowBox[{"weven", "[", "n", "]"}]}], ")"}]}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CurlyPhi]even", "[", "n", "]"}], "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"ceven", "[", "n", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"weven", "[", "n", "]"}], " ", "x"}], "]"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.824293146298252*^9, 3.8242931969308233`*^9}, {
   3.8242932591916485`*^9, 3.824293288076357*^9}, {3.824293321822016*^9, 
   3.8242933787201033`*^9}, {3.824293445455513*^9, 3.8242934680097923`*^9}, {
   3.824293539681374*^9, 3.824293572803871*^9}, {3.824293615745474*^9, 
   3.824293717645814*^9}, {3.824293793247771*^9, 3.8242937991646338`*^9}, {
   3.8242938505150957`*^9, 3.824293954338046*^9}, 3.8242940860852413`*^9, {
   3.824294932997043*^9, 3.8242949620295467`*^9}, {3.8242949996562815`*^9, 
   3.82429501340722*^9}, 3.8242951025318546`*^9, 3.8242952118529882`*^9, {
   3.8243000083589687`*^9, 3.824300017287839*^9}, {3.824403536038068*^9, 
   3.824403536200982*^9}, {3.8244595996070204`*^9, 3.824459635450856*^9}, {
   3.8258482390234284`*^9, 3.8258483660283604`*^9}, {3.8258484496441293`*^9, 
   3.8258484500204515`*^9}, {3.825848695870807*^9, 3.825848698072036*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random variables \[Xi](\[Theta])", "Subsubsection",
 CellChangeTimes->{{3.8244042997440863`*^9, 3.824404347537173*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "R"}], ",", 
   RowBox[{
    RowBox[{"i", "=", 
     RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Xi]", "[", "i", "]"}], "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", "M"}], "]"}]}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.824294177439869*^9, 3.824294249583528*^9}, {
  3.824294301807912*^9, 3.8242943362622523`*^9}, {3.82429493931579*^9, 
  3.824294941324031*^9}, {3.82429537433107*^9, 3.8242954319057627`*^9}, {
  3.824296053456194*^9, 3.8242960535841675`*^9}, {3.824296961291499*^9, 
  3.8242969850738525`*^9}, {3.8242990965840683`*^9, 3.82429909731104*^9}, {
  3.8242991538162208`*^9, 3.824299154989897*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Realization of f(x) and E(x)", "Subsubsection",
 CellChangeTimes->{{3.8244043605283813`*^9, 3.824404376356472*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RealizationF", "[", 
    RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"\[Lambda]odd", "[", "n", "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[CurlyPhi]odd", "[", "n", "]"}], "[", 
        RowBox[{"x", "-", "2"}], "]"}], 
       RowBox[{
        RowBox[{"\[Xi]", "[", "i", "]"}], "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"M", "/", "2"}]}], "}"}]}], "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"\[Lambda]even", "[", "n", "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[CurlyPhi]even", "[", "n", "]"}], "[", 
        RowBox[{"x", "-", "2.5"}], "]"}], 
       RowBox[{
        RowBox[{"\[Xi]", "[", "i", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"M", "/", "2"}], "+", "n"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"M", "/", "2"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Realization", "[", 
    RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"10", "^", "5"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"0.1", " ", 
       RowBox[{"RealizationF", "[", 
        RowBox[{"i", ",", "x"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.824294270340273*^9, 3.8242942980692043`*^9}, {
   3.824294361150561*^9, 3.824294508750454*^9}, 3.8242945401078787`*^9, {
   3.8242946592480683`*^9, 3.824294661427088*^9}, {3.824294885858924*^9, 
   3.8242948861228247`*^9}, 3.8242955596652946`*^9, {3.824295611430377*^9, 
   3.8242956330329576`*^9}, {3.824295770068165*^9, 3.8242957713891945`*^9}, {
   3.824295947705929*^9, 3.8242959993775883`*^9}, {3.8242984084519005`*^9, 
   3.8242984086445866`*^9}, {3.8242991651203938`*^9, 
   3.8242991666952143`*^9}, {3.8242992922800665`*^9, 3.824299329682956*^9}, {
   3.8258484823375287`*^9, 3.825848514605692*^9}, {3.825848552573485*^9, 
   3.825848596215515*^9}, {3.8298914500728483`*^9, 3.8298914823341856`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example plot of a realization of E(x)", "Subsubsection",
 CellChangeTimes->{{3.8244044021625657`*^9, 3.8244044111581483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Realization", "[", 
    RowBox[{"567", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<E(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8242954667002044`*^9, 3.8242955126433334`*^9}, {
   3.8242956665222235`*^9, 3.8242956932609453`*^9}, {3.824295781853408*^9, 
   3.8242958141846375`*^9}, {3.8242958457122025`*^9, 3.824295861239218*^9}, {
   3.8242959141066875`*^9, 3.824295927630114*^9}, {3.824296005237115*^9, 
   3.824296011334149*^9}, {3.824296069316907*^9, 3.824296080635372*^9}, {
   3.8242964094136276`*^9, 3.824296435926345*^9}, {3.824298411421678*^9, 
   3.8242984141858654`*^9}, {3.8242998267915754`*^9, 3.8242999340043554`*^9}, 
   3.8245429870601544`*^9, {3.8298917159628296`*^9, 3.8298917287913504`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
drsbErCfsuS2QvDXx/0nacYEzOIvpVcNDtXx+XXHlICti1tkm8HrXuZ2PLQi
4LjsXr5RMPfpLd+S7An42y3fc5s5oF9cV2wi5UjAg6t6GuLgkFLT5gwnAkbu
tvW7wFxCwY1FlwhYJ/rgoiaY1D7zudGdgB3r5V+eBdf7/adj5knAfGtBHFfA
D5SkP3V4E/B8OEPQA0wMP1X1x5eAS3SP6gWAaw8tal64B+NfEj4XAg6eiPww
6U/A5ls2KEaBOfVrS5fuE/DfSfv6BOb1Sw77fUMImPqgLjaFef3r5XesYQQc
5WnPmw4+YhWr9iCCgH8Ts1WzwRzsykUbHhFwk/8BtgJwTX7jnugYAk6XDPN5
Bw48cz5f6AkBOwsrJpSBdXgJyolPCXh3VMaFSjB75fOc7fEE/CQrpOsjuOuQ
jl5fIgEbLy/sqeVg/v1ysv/ZCwI+/NhO6gvzfvse3zyeSsAaL/ZkN4JPFmts
3PiGgI+9Gm5i/v1QSXUkoymdgL88HAloYb5ffrj2w0wC1n6e3tIK7lZU79bJ
gfcJTcn9Bs7L6vNgySfg994G0m3M9939YEN5IQEPDG1WYto2Xem11zsCPvDx
ThPzepWdvzT3lML6ua4xmPcjvfLrnCon4IZy/mrm83old13LqCTggPF9As3g
guQ20vmPBLwj498Kc7wPtvm8kPhMwNwy+R7M97GL336gp46As9hIvsz3VRX5
2hbXQMCnj7tt/sTcD3Eely2bCJhYeEODOV+9m0XZeVsJeEoujlIKLoz+HN/Y
RsCnTM4cKGbuJz6Xvfd/ELCl7EmePLBDhECz1k8C1jTYcO0teN1/F9be98B8
Kn7vSgT3k3jjbvQT8Mc37INPwMXBJUrKg7A+7TJekWBHfy7HtDH4/H7s4Xvg
fSz59LMTBHyIl8vLC7zhzslosSkCxsbVai7gkptva2LnCfgk63mLk+DwJYvT
5osEXEy5n2MCPntjZWEDDfbro5MxOhzM82a8M2iVgA2kwhflwENTC5WYwIq7
Diq7M89H6ZVEmxU2VvxLl8uLH3zu4vRDdy5W/J5vaiMVzteBkSeSiutZcVq9
fsY4mNcJl/3lYcWJ9t51XeBy+6jJM5tY8dlRRlQZeKP1HhNTMVY8+7Xdzgs8
9v336DpJVryWOLTlHPiDeeC9uh2s+J+Jua05+OKxH3mau1ixbLzM+d3gCl2v
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
QcYXIuQ9j4GfiK1bWFsjY449gn98wf8D8BFrGQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1342#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"E(x)\"", TraditionalForm]},
  AxesOrigin->{0, 100107.39312823278`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {100107.39312823278`, 107842.88721546394`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.824295484522831*^9, 3.824295538931663*^9}, {
   3.824295672069739*^9, 3.824295718530519*^9}, {3.8242957780294256`*^9, 
   3.82429581491415*^9}, 3.8242958624172773`*^9, {3.8242958971793222`*^9, 
   3.8242959283915052`*^9}, {3.824296007301975*^9, 3.8242960121521187`*^9}, {
   3.8242960746022043`*^9, 3.824296081814291*^9}, {3.8242964108131337`*^9, 
   3.824296436807582*^9}, 3.8242970303918667`*^9, 3.824297436918101*^9, {
   3.8242978095763645`*^9, 3.8242978164419785`*^9}, 3.8242981651317263`*^9, 
   3.8242982171216245`*^9, {3.824298415399374*^9, 3.8242984228645754`*^9}, {
   3.8242987124644356`*^9, 3.824298755930997*^9}, 3.824298872525463*^9, {
   3.824298996322399*^9, 3.824299031138975*^9}, 3.824299103311102*^9, {
   3.8242991722499723`*^9, 3.8242991894718943`*^9}, {3.8242993369568853`*^9, 
   3.824299368478198*^9}, 3.8242996775669413`*^9, 3.8242998134691195`*^9, {
   3.8242998438680744`*^9, 3.824299935083476*^9}, {3.824299974603979*^9, 
   3.824299986851018*^9}, 3.824300034592393*^9, 3.824402714365693*^9, 
   3.824403564129434*^9, 3.8244040741071973`*^9, 3.8244045892416697`*^9, {
   3.8244597720232897`*^9, 3.8244597860755215`*^9}, {3.824459823120021*^9, 
   3.82445983141747*^9}, {3.8244607342240353`*^9, 3.8244608266375685`*^9}, 
   3.8244609023441057`*^9, {3.824462252781657*^9, 3.824462266314618*^9}, {
   3.824462514048583*^9, 3.8244625239557376`*^9}, 3.8244633127909317`*^9, 
   3.824464094274616*^9, {3.8244819764838514`*^9, 3.824482003855643*^9}, 
   3.8245428737568893`*^9, {3.824542988831152*^9, 3.8245429962705593`*^9}, 
   3.825848619280637*^9, {3.825848775490035*^9, 3.825848811860527*^9}, 
   3.825849001215717*^9, 3.8258512822665806`*^9, {3.8298917176498947`*^9, 
   3.829891729637786*^9}, 3.829893725133564*^9, 3.82989736149748*^9, 
   3.829898603337845*^9, 3.8298986353237076`*^9, 3.829901376057558*^9, 
   3.8299014455177307`*^9, 3.829902230863919*^9, 3.8299023114524555`*^9, 
   3.829902520085648*^9, 3.829902638196351*^9, {3.8299040503455114`*^9, 
   3.8299040889902954`*^9}, 3.829904238196582*^9, 3.8299095159305625`*^9, 
   3.829910623536819*^9, 3.830245047973707*^9, 3.830251497509046*^9, 
   3.830971332813387*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ensemble averages and variances", "Subsubsection",
 CellChangeTimes->{{3.824404430760228*^9, 3.824404439826494*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EnsembleAverage", "[", "x_", "]"}], ":=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Realization", "[", 
      RowBox[{"i", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "R"}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EnsembleVariance", "[", "x_", "]"}], ":=", 
  RowBox[{"Variance", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Realization", "[", 
      RowBox[{"i", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "R"}], "}"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.824296495767851*^9, 3.8242965154349823`*^9}, {
   3.824296905079999*^9, 3.8242969447786036`*^9}, {3.824297006719416*^9, 
   3.8242970267403097`*^9}, 3.824297091363536*^9, {3.8242971249900703`*^9, 
   3.8242971387168207`*^9}, {3.824297176578827*^9, 3.8242971992919703`*^9}, {
   3.824297394388367*^9, 3.8242974077475157`*^9}, 3.8242975006255226`*^9, 
   3.824297634126149*^9, {3.824298441565436*^9, 3.824298488845789*^9}, {
   3.824298571537335*^9, 3.824298575462406*^9}, {3.824299544688004*^9, 
   3.824299548702342*^9}, {3.824299719051321*^9, 3.824299719487586*^9}, 
   3.8244027080312166`*^9, {3.824404447084652*^9, 3.8244044484407635`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example calculation of ensemble average and variance", "Subsubsection",
 CellChangeTimes->{{3.824404459449833*^9, 3.8244044921737347`*^9}, {
  3.824461090140869*^9, 3.824461098019827*^9}, {3.825848657258809*^9, 
  3.825848661075363*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EnsembleAverage", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EnsembleVariance", "[", "2", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.824404498577379*^9, 3.8244045059465055`*^9}, {
   3.824461099960408*^9, 3.8244611074649506`*^9}, {3.8244611391169586`*^9, 
   3.824461228104562*^9}, 3.8258486689244843`*^9, {3.825849879449819*^9, 
   3.825849895622757*^9}, 3.8258512747481055`*^9}],

Cell[BoxData["100125.0760540266`"], "Output",
 CellChangeTimes->{
  3.8242985764212847`*^9, {3.8242987129017415`*^9, 3.8242987562719994`*^9}, 
   3.8242988728790464`*^9, {3.824298996667679*^9, 3.8242990314824495`*^9}, 
   3.824299103655099*^9, {3.8242991725899878`*^9, 3.8242991899681315`*^9}, {
   3.824299345936885*^9, 3.824299370183052*^9}, 3.824299551763399*^9, 
   3.8242996823109894`*^9, 3.824299813740644*^9, {3.8242999748794575`*^9, 
   3.824299987130169*^9}, 3.824300034831545*^9, 3.824402714609524*^9, 
   3.824403564370144*^9, 3.8244040745765047`*^9, 3.824404506783428*^9, 
   3.8244045895274487`*^9, {3.8244597814370427`*^9, 3.824459786352002*^9}, {
   3.824459823401096*^9, 3.8244598317249017`*^9}, {3.824460742895301*^9, 
   3.8244608267151003`*^9}, 3.8244609026705017`*^9, 3.8244611102104826`*^9, {
   3.8244611416638265`*^9, 3.8244611620512075`*^9}, {3.8244611986952477`*^9, 
   3.8244612324475937`*^9}, {3.824462253129188*^9, 3.8244622675734377`*^9}, {
   3.8244625149713907`*^9, 3.8244625248040047`*^9}, 3.8244633139485903`*^9, 
   3.824464095264613*^9, {3.824481976981722*^9, 3.824482005022893*^9}, 
   3.824542874991274*^9, 3.8245429975294256`*^9, {3.8258486384351826`*^9, 
   3.8258486707387066`*^9}, {3.8258487757649508`*^9, 3.8258488128601127`*^9}, 
   3.8258490022153788`*^9, {3.8258498897466693`*^9, 3.8258498970423822`*^9}, 
   3.825851283269924*^9, 3.8298917463176527`*^9, 3.829893731205819*^9, 
   3.8298973625305457`*^9, {3.829898609017663*^9, 3.8298986363390937`*^9}, 
   3.8299013777915382`*^9, 3.8299014457989097`*^9, 3.8299022314731383`*^9, 
   3.8299023121010785`*^9, 3.8299025220467005`*^9, 3.82990263854516*^9, {
   3.829904051941491*^9, 3.829904089268552*^9}, 3.829904238472391*^9, 
   3.82990951628055*^9, 3.8299106238297863`*^9, 3.8302450482080746`*^9, 
   3.830251497759027*^9, 3.8309713334087505`*^9}],

Cell[BoxData["1.0911277920669651`*^8"], "Output",
 CellChangeTimes->{
  3.8242985764212847`*^9, {3.8242987129017415`*^9, 3.8242987562719994`*^9}, 
   3.8242988728790464`*^9, {3.824298996667679*^9, 3.8242990314824495`*^9}, 
   3.824299103655099*^9, {3.8242991725899878`*^9, 3.8242991899681315`*^9}, {
   3.824299345936885*^9, 3.824299370183052*^9}, 3.824299551763399*^9, 
   3.8242996823109894`*^9, 3.824299813740644*^9, {3.8242999748794575`*^9, 
   3.824299987130169*^9}, 3.824300034831545*^9, 3.824402714609524*^9, 
   3.824403564370144*^9, 3.8244040745765047`*^9, 3.824404506783428*^9, 
   3.8244045895274487`*^9, {3.8244597814370427`*^9, 3.824459786352002*^9}, {
   3.824459823401096*^9, 3.8244598317249017`*^9}, {3.824460742895301*^9, 
   3.8244608267151003`*^9}, 3.8244609026705017`*^9, 3.8244611102104826`*^9, {
   3.8244611416638265`*^9, 3.8244611620512075`*^9}, {3.8244611986952477`*^9, 
   3.8244612324475937`*^9}, {3.824462253129188*^9, 3.8244622675734377`*^9}, {
   3.8244625149713907`*^9, 3.8244625248040047`*^9}, 3.8244633139485903`*^9, 
   3.824464095264613*^9, {3.824481976981722*^9, 3.824482005022893*^9}, 
   3.824542874991274*^9, 3.8245429975294256`*^9, {3.8258486384351826`*^9, 
   3.8258486707387066`*^9}, {3.8258487757649508`*^9, 3.8258488128601127`*^9}, 
   3.8258490022153788`*^9, {3.8258498897466693`*^9, 3.8258498970423822`*^9}, 
   3.825851283269924*^9, 3.8298917463176527`*^9, 3.829893731205819*^9, 
   3.8298973625305457`*^9, {3.829898609017663*^9, 3.8298986363390937`*^9}, 
   3.8299013777915382`*^9, 3.8299014457989097`*^9, 3.8299022314731383`*^9, 
   3.8299023121010785`*^9, 3.8299025220467005`*^9, 3.82990263854516*^9, {
   3.829904051941491*^9, 3.829904089268552*^9}, 3.829904238472391*^9, 
   3.82990951628055*^9, 3.8299106238297863`*^9, 3.8302450482080746`*^9, 
   3.830251497759027*^9, 3.830971333627451*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot of 10 realizations", "Subsubsection",
 CellChangeTimes->{{3.8244045155536075`*^9, 3.824404548598502*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "10"}], ",", 
   RowBox[{
    RowBox[{"i", "=", 
     RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Realization", "[", 
       RowBox[{"i", ",", "x"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"list", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<E(x)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.824297892741974*^9, 3.824297997687318*^9}, {
   3.8242980437493906`*^9, 3.824298089410347*^9}, 3.8242981305437317`*^9, 
   3.824298175933056*^9, {3.8242982070728784`*^9, 3.8242982071393332`*^9}, 
   3.824298555191572*^9, {3.8242993940868053`*^9, 3.824299396655035*^9}, 
   3.824299801439788*^9, {3.824299955371066*^9, 3.8242999834643774`*^9}, {
   3.824404530375566*^9, 3.8244045416598315`*^9}, {3.8245429708286533`*^9, 
   3.8245429732363358`*^9}, {3.829891785416972*^9, 3.82989178554195*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
P7fAgv8BT1ECUw==
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Z+O7aJ3uqCWrhBhQWf43JRgtagOvfgkzYOudKEN3dMGRGwNHJRhQX3tn2x60
uIXGTlN5BqySOhP9Lx566773CC5hwJrWrwv/xUvhrss+FQoMcGNa/K5Fn9hR
/1RvBQOSbcnJJHSR4QUJlbUMiD60dEIbHfFG/kmvFgNuSvu3yKFPbqw0TNZh
QMbiu1J0tISu9AVZwOt/aL7lGO8Oa159EzBhQP7hk0ab0SVV9el52xmgKL3c
aSl63qkhbztTBmw5NDnBgy5+sFSx3JwBxy6NKxVjvpk7//pZHysG9BU8UFFF
v6JsBCdcGXA1NDhnEPOZaKT3zwduDODtH9lRjj6uHvN0jycDzphw9sf8y38O
XyyyfRgQlxryVh99rFk7+VQIAx58VJINw3wpWCys2xnPgFOLK97wY361Orhc
9FYSA0pb1al6zNe5EwYdG1MYEGg9lp2IPqLmfjXuMQPod5/l6aCfJXTUH3jO
AOe/w6uPY74/eDnvdPUHBrStceJ/gPXi8Vbr+KJxBnRws/ibuNifKC/WIxQD
aFvIy/voIuHW78WTDOAEGyw7hq6qPTy/lMaDeeXGun6sX6OH94e/YfNAZOWL
Axysb3pnTS9WLuSBHX59z/iw/lXF6O2r2cwDk3Gf7/Fg/RzrlxHtjuSBG+lR
eflYvyPu9VTERvOAxQORKme0xs4c792xPPBl8wtqOdo5e/tgSQIPDBVfDY7p
w/7Vzefz3XQeyGv+XXOxF+dZVneo2WseaD2z/bJRN/ab8k8FCn/zQEvThmv0
dpynqy+VnhvigVvbC7YWt2F99Dd2X/GXBwref95+CW3W3dEbxeEBQV0fbW4r
Bz6lS1ae5WGCzJcXnyewPynXvhioJM2E/BAVBx7sX3J3G/FEbGKCwvdtEiea
sB6b5AUsMGJCHGNe9Vr0IYPl/A+2MuHOJoEpHjRDQ3DO8x1MOLLjXkLCN+y/
xL9Ift3HBA32tp3tX7Gfqtq7YsEpJrgvmdzp0ciBV5UV6clnmKAY13VlJzq8
ZN0qlbNM0Doqo78UvSZLZo3eBSY06mzUr2nA+eTaT10rX7xf0q5b6miZHbZm
ybeZcPlYkt+cetwvw8Za5TtMMHl+/XQ/9m8lulv25sYwodTq0eA7tK3KioNv
45ignPgjNwj9TOiPTW8qE5zUC5znoAOZR3qc0plgWmOtOFSL/crUl5NUBhMO
asq416JpA09Ps3OYkCkoNn0Xve2Dq5tyERM+6cvdW4OWf9PNzSlhwstdu60W
oEdeWlzSfcMEFX/Z90x0dJq2345KJsRc8r/dWIP9eGIas/E9E0ITV1GlaIiR
vXLkExM8ogL5nqC7r06HONUwgUrVUQpA5/ueFqbqmFCsH7nhLDrUveW6byMT
Yu9Gzx5Bq58svX2zmQm0SZ/bumjWUXUp2Rb8nlrm9iror/uSYpLamFAS83RY
Du29JSAup5sJYapfZOnoGssTh9T6mGDlzMcYrcZ5ztVEOr2fCbuc7KN60BdC
VBuW/WHCwpSG5u/o9wlit5KGmHDzs1JtFXpB3uhO+b9MGOhY7/kWfeZzo9Dd
MXz/BX31BejXnS/fSXKY4NnN1/kMLTF5L/AmlwnevadSHqNtxXwNhKeZUD35
Ry4Znb/MhhY8i+tZedjkHlpIz6iQxWBBW1bQqii05Z4VHr5MFmweIR9uoLPs
52hN87JAy3unfBiax3for5sAC8KF/ZSvovdG1WaNCrKg2TP+bwD60ZPnp5yE
WTBQ5uzqj+a+iV4xIMoCC75X2b7o7U0Xe+zmskDYi6T7oOOHjiR3zGPBiFeJ
9T+P8BocPSLFAme36YZ/3iSnuPC7DAsWDz4T8ENHaQh83yvHAnvPuMl/9/+1
dSCqRp4FyyvcnwSiN1h92bNjCQuOh3Dlg9Hh57PF3iuwYDKscXc4ui309mfD
ZSw4Gle29RZ6TZJbSOlyFpjfOceIRgfmH9yiq8yCTIsIrzj01y96rHxVFsiW
1BWloFd2L369ZjULhnNb32SgvaaY3lkaeP8F1uEv0FXiveuVNVlwoIEmX4pe
svwD5+E6Fuwusj7/Ae1KMnL/W88C3bSVtxvQMo4uq2SBBR3PLqwcRDv6WQxE
6rOgZPO65Cl08R2dVHFDFuS+aepm43myKaf9xzbG9T1f/nE5+vn3jpaAbSzg
leJx0kELjLyNpe9kgaqmVKsJOmNhmCS1mwUS7uuWOaM5F6TZvYdZ4OaWYVWO
Ng6fenvMCp/3utq1GX0vucW/xZoFAQbeB0fR+tUPphvsWNDncSFGEeMtdIX6
cLkzC85t2z8agf4J8zI2urBgZ9v+u9no1RYc+8LzuB86qZLV6Ab/os4cTxYk
1Q+EiGI+WPzD+GtSAAt0QqMuRqODX6/PNA9iwUqjZX9L0CMPlQP5Qliwrfiy
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

       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
jnNj/w9b/Vx7
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Pq1qxn5xY744Z2oK40H+fYpG/w9wgtUb
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV13c81V0YAHDrXjMrOxWREpWm7ZxQZCSpzKQSRRJRJC8ZJVlly8zITMlK
QnZW9l7Jqsx7bzIu3sdf9/P93N845/ye8zzPEb1uf+EmHQ0NjTA9Dc3Wr9bN
6baKX84qoc5yCl/PUzCDmtC9EcGLSDNGO/8S+FhCVOxHQUtklzWK/+hRsHZz
T16coBP6R7oRIgg2tPz35ZWgDwoiTW966VLw0OFnaoGCYSjofMx3Py0KDksQ
qNhrGo6qjaU0D4G1ODKVymIj0E5RiebOsxRcONd0Yn53NPq2Zr0qDg7K4d6v
LxGPXucNdbRpUHAir95Tf8EU5JJYT7xymoLdmiOrL5ekIJVHTwnbwZd9R+nE
TFMR24EQxgZ1Cmb76+DxOTYNXfbv5VYEu3SGuczszkCl7N1HJdUo2CBgqLC4
IgOdqkiQm1Kl4EPqEn99rmWil87blNLA4x+LHHYmZyGNlga5fWD90H6bcxLv
kO3ANPn4KQqW1hbLEKp7hwpO0LWtYgpmor8zNWmdiyT/u576FXz108aH8ovv
0e+wMJkLYF7JkENGER/QzPrd4v8QBT9h+rjvuWA+UniVUsmgQsEHNF765d3L
R5lHHmzvVqbgdl/7XwN1+cg1w9E5HSxOL5116EEBWoqqsD4Prl1POdTZXojM
aD6PZitRsL2Sd/C6ZBFSmyZGPAULuF1bkHhShDQ6GvWvgW8v78xzPVyM5O5J
9AiC2cgRJ3YHfEK7KAcWIxQpuOCIc4Tmz0/oMeeNPBew+T2Dfw4KJYhlw++u
KTh3luNT9XQJqrkd0yYGNpKeE5xDnxETxc2ZGUxj2/SIP/IzSnSUZV9QoOAL
035KNqdLEU08QaACvCZhHRcaW4qu7P/rmwFOuXl6o5RcirztXMZCwX/HaCs4
3nxBWdvbLWzB8aKjIvIrX5Bd7x0PI/AZi7In18+XIW4p8adnwFFDj9QKNsoQ
x73zp/eCTwkbpwxfKkfLBMdVXvBvE1kCU045an3M/JIR3NDE8lGArgLV/LrJ
uCpPwbtmXG/kHKxAPc86TGfBjqy/tqsaV6DJL68DfoBrDxhVd/tUoA5xQlQ3
WEirzsn2fQVKDzR43AS2v31yL81gBapjrJetAlf7pXaFMX5FolOJ9SVggXSe
p5LHvqJHDYIHP4Lv1HmfLDP/igqSbG9kgysmSZMX/L8isfym22lgHuL1yKmC
r2gs7Z5KEvj23jaNxz++olPefiOx4DJ1vMy5rRJJf1HVjgZzW+amp8pVomT5
Ro8IsJX3LmMFy0p0/JK2Wxj485tA5u/Blcj39y/FUDBnJfXTjc+VaMiosfwV
2PKHrc3yZCUq9+cibP1fTDMgFMhdhZ5QB5i37mcT0WoUValCK5UaTeFgC/TJ
rfB2FRJ/Za8VBS4w3y+tHV6FRqpsvV6DWf6LHBypqEJJ5hccE8DmccRAp5kq
hIRlBVLAeaXOyswC1aj4npRjBpg4OD4bp1aNWF+q/JcLNlkziD9qX42YH7kr
FIJzharO1cVUI6V/pJQvYCPjpNyFxWr0iOPN4xbw/MBFljdCNUjw0vZTPeCn
5kw3DdRqUBJHQsQo+OMNe6HCsBpUFeA1RwFrTe5xtv5Sg0SawmY3waO3ur8L
TNYgqvfJh6wQH+x3lX3dZGuRYn+AmDg4dWFhRNqiFqVzLageASvdT1EY9qtF
XetoUgVs48K6gPtrkfJz8gdTcI1XnwnRvQ55UNwOvQabEQILilLr0DtDUZVs
MOkZ5rzdUodwllT1F7BI4Nuaxt31KKrqlfQY+HGks8zLynq0N9NCRQb209Fs
LqIwUwN6Xj03MgL+dqjGolmmAbGaZvv+A1t8cPn8n3EDkhrr9+WA/RxYOHLv
R2YDEtG0CcLg6YqcgTTdRiRiqRKUBo7vOvvhSGgTkuxzLfCE/MG6+cRMY9d3
ZNbOMWEB+SjqtqG59Jnv6K+8yCcPsHintAXX3e9ozmRXdjxYJaPnxsCX7yh7
7tfUIPhTRkRB0aFW5C886msC+W3WYKZUu6UVdfvSdBpBfryUHtl4f1s7ul4+
5nEJ8m3sFS8dK9F2VCbw57sTeIzbrtnoRDuK/yvIGAa2d1f9rnylHUW404q3
g59fmG1nzGlHTrk5UzqQv79QVftf63Sg7u0TvIqQ7xnyDpoGWXQgGm1aFiOw
lrXAoKdTB+p7N/DNCdzTNjt0M7YDLVszpuWAF9Oifhye6UC3p9iShM9Q8F79
uemqF51owWm31BxYyENDwTqpE31ZjD7ADPWGMyfxBUtRJzqiy9IsBl5lMjik
P9aJXjY7kQzBrRVF94flutB00xXfz+CaOc6aJ+e60G45m+sd4BJhG769ll3o
hed4229wqovwJ9vgLnSVsH5VQJOCH8k82Vie6EIux/ho7oLtzfv1Yte6kNL9
YVkvsGXAsSTE1Y1iXi4thoP1pifUnip1o7ZhyYnPYHU+FC55oRu9DzAQagEr
qEdNNll3o0jx399GwOKJWs+3h3aj9tchIbRQTwVbkvsL07sRW11ZMheYnUqV
MinrRhpPIiRFwSuGuS2Jv7qRyXS4rwp4zpdJRH2zGxV4zhjqnN2qh9ccpnh6
EHOAVrgxuIWDh+cQ7kES8a/OOoKrlO1utl3qQXiztNQdXGxbW+hk24M+htmH
+oHfRe9mEnjSg7SPtDa+AifXuRh/juhBdn+JlrHgqL9tmebZPcjkkopJ6lb9
F5Oi0lb2IMvdydk5YG99H93Unh4k5mVpXAB28RiK15ztQQnc+ealYLuckwt/
6HqRXXtNSSX4+kDwqWCBXtRyotW2HmzE/OvV0UO9qESS7V4zWFdWdbxLrRfN
CBbUtIFVb74+4Wrci8aWmGy7wHKhlKfC9r2oU1HTvBd88Ktub7lPL0qiFMT1
g/fMp0neiOlFn6oi9w2C+XfSuBHf96KVqROrW2bTNm7KqOlFnqoD24fAdK55
O3UHepGbWZfj1v//0ljtFxZ60dQdJ94B8EynZUUosQ+dM2dd3XrfGF0Zl6xw
H3LunN/VDe6R4b/Rf6QPEY8+8moHN5nfy3fX6EOH4wliLeDKgG8E0St96BjL
wsbWfItK9hhWO/ah9ZMxPFXg7Gm3dGu/PhRfYn19a73e8HWtsMT3oTpC+WQ+
OFL9kPa7j31I9jZzYjY4wPFZrP63PiSx42NAMvhhizyKovSh2uGfK0Fb8XOo
YOIbUz/KOu6l6gNOCZQJWBPuR796IztcwG06+/rMT/ejVyHyDVfBt7LfeIQY
9yO3NwYHL4A3WHdJVNr1o2UibacaWKqR5/7eiH6Ur6c9tdX/VR4IETTM7Ee4
10+fZ+v7+bNW+JX1I1r616t0YN+zdNtmJvuR/LsohmGI95G6+bQ82QF01Yum
1x/8YJ+t7rj2AKpL6xNwArM9myTzWgygBVv3YDOw/Jkh7Oo3gB4ktwhKgUOr
G/pR3wDiPvnNpwz26wHxM08cZgeQijP/5SRwhffXfcm0g8g0r+aiN3hWtdiJ
eGAQqfkqd6uDNb6msjc/GkTRVmwtXyCfDIuIFmwEDaKbN0rmosFOnrGmMsmD
yMaE/oQzOAmFpoc2DqI+icJDkuC1L56qJsJD6PT6zS9PIV+92kmdfiEzhGx+
JCyagve7Pwz+oj6EasVM1WXAl5TuDorYDaFo+vVT3ZAfc0tMH0x9GUJV74Wf
8YPPCPUIC7YPIe6qx1ETkE8HXS9UaU0OIXGdv1/zwMzyZznfsQ+jxE4ZEy3w
jaKTmU5XhxHDdtcXd6Hf5c/nGqalHUGkMaqhP+R3s4C1i+N8I0gsfYeIOviN
5URjrfQISm063UiFeiDN++nTC6MRxCQzUGcDVn1gEc77fgR5nv12Rh7625Ox
hmlhh0dR3Dnl7wlQv4z9mn74KoyiPEv8SAP82OnUzoenR9EN9ayNWaiHX3Wk
woxNR9F3+rGXsmCd9Y0nu56BFce7SuUo+Jp52pX04VH0ga/YK/gEBfto7YiO
/jWKjAYmwsXBaSdDOv0po6j8D4d78XHYX+yPtO1YfqAMhrDawWMQH+W68kdP
/kCiHH9O8R+FeBf5y1Ma+APq88Nqg0NwHhlTa/quNIb2jKoc+bOXgrs1nywG
aoyhgP23Ta+Al96V8elcGEPO925ZtYhTsKyb/LV66zG0fvmkSI4Y5L/th5cq
Xo2hF9yiB6+IQr1UFxLJmx5DLGu1zH7CFFyatnA/LOwnUrSuec7GDd+H7VD0
hYSfaFpsf6kpFwVTHW3LODN/ovCeGz8yOClYGU0yBZb/RM5vMxjVOKAf7BmI
8/39EykYCg3cYqPgcqa6ugd4HBkpHbD2JsL+sYnbYTwzjsL1hUTXVsj44y9b
W/OlcSRo4hwuB065pfD5Bs0EUqk2VHJeJmNfqx6TuzwTaE9J096ZJTLWvM4V
4600gSxDPvu0ksn4u7GvwLuACSRswnrTaZaMBzXteOkPTqKvpnqVMqNk/FdC
mSPHbgrpfzGhqa4iY7qVLM4de3+jjcfL/QmeZHxy06LQ4N0M2jer6h58iox1
dCu8ThfPoFe+jwhvMBnfeL1bT7ZyBhWdLaQtQGQcIjs8JdQ9g34zKVwZVCbj
X/amgmPrMwh34jYZBTKOHb30+J7uLDJnr5MhHSVj2kot1cCZWeSN9PPHxMlY
gDOT3WNpFh0NKGNnBB8yZx64RzOHGNlPbZcWI2OT1br7F3nmUHvrPxEXUTLO
P3o6dYfSHGruoLoJ7CJjq2TElPliDl3J2PvKjZ+Mm3yOt9QemEehCRFrXSxk
rMDRSPfyxDwiS1CZ6cDp0ddkTfE8kudbFzzMTMbe74IS5y/NI+4CmjMBjHB9
77SjwJN51PyhfvMCA1wvFcdv0zOPfp646LF9g4RVf3m9J6ouIP5BadU7JBJ2
PdTSYKuxgAbNFhs+L5Lw+/uCE606C0joh8NzNvCujVzB14YLKHHOIufDPAmv
cA95HbZbQJrNhsUss3C9kuwlo6gFxJowzrIyRcK7Q/6sZMwtIO/EYsfvwyRc
ds0jI4+8gJRG/RX1webHtht/Xl6AenTqeOcQCcd2KxQ30S0is3OxxUODJCyw
0//BPN8iSmI4JrbZT8LcmfvJx9Eikhyl7HvcQ8If3ErfKKsvogdVnVpc4PO6
5y+cObuINlUuZbztJuHghYcfDA0WUdRa5Y7eLhJmk62zf2S9iCKq3aY0OkmY
UH1zpjx4ESmfFY650UbCKeErr+vDFpGaoPoXNrC6daB2WzQ8f2ZcvKiVhL1Y
CjLHkhdR/xmLKg7wxnmG24TiRZS8V/lsawsJx+2JEmD/soiQ8qlYb7ASRaqe
r3IRGYxuk5UDu0Ua7NvftIgcPO1PpzaT8PLQmwmt0UWkIpfXEtREwpG5J8MN
JhbR8292t3XAJ580qJv9XkQeTZ7nWMHO4qRkO8oiOsf1eTmgkYRJNqeuhzCR
ELVdtjOhgYRfKnVxRW8jIb5bbvXWYBn221+TuEnI9+hPpiPgux9CRD4Kk5De
78a7dd9I+M+/keEuGRLKDWbvoAcXWgdXap0kIUUOT6v2ehL27FFJK1ckISGa
u0/egPmK4uwyzpCQyV7hcxrgHxK6+rt0SIhWnYZGGJwdQT0eqk9Cdunp8qQ6
iK8HptTHZiT09+1V9WTwtkmW0cVrJGRz6x7vf+DeSyVVVtYklPrp7F0T8N0T
gi/OO5IQ57xUET9YPrX+bs1DErovx/t2uZaEGXhdLii4k1Dx0LNdA+AYSreg
uB8JuWa+Tk4B37R8uh4VSEJWXmvvX4BlOk/82BZKQvIC1087gdfUJqq9okiI
glIszMG1H8PS/8WR0FT0Kzot8Esx9YA7ySTkELpyQBZsFkq2/5FOQjXWSX17
wRL0yQaX35FQo8g5dj7wouMF2caPsP6R5fWM4NIx2h34E6zPww9MazUk/PTC
h438MhKyVxhongfrV1qMSVaT0KXDC/yTYOGjnLXx30io92HC5BB4Kqk8Y/t3
EgplCZPvAedx2Qf6dZKQVL4TZzvY/ckuh/U+EnouMG7TAtZcbL7oOEJCB/M9
NZvA26+5y02Nk9DTofH0RvBwq7Sw2W94X23ai63/M/DgZus8Ce13N1rYut/p
/Yufp/+SUPfcs+6t5yMRxbqSVVj/6TLlXjBLyO/MwzRk9JfPe+8IuHMzOiiF
QEZf2S4HToET7M86CrKS0X+owGkRbDOyfCmIk4zKWYUGqODjeuny9Hxk9LBw
pZwZ1mezzHCnyw4yarxbs0cA3HCIkXZWhIzW9X7T7QeHxxeOX5MgI9MbbVfl
wRbsVvXdUmSk9mZETge8NFsdXHGSjKrUF80egL9ecbp/QomMCOaZaYHggGYx
w8xTZOTJvXQ7Dbwnx2tXmA4Zudr7mAyCZ4WP0jFfICOJFLOnK+DigB8T7oZk
tOclab8AxJvuHZxjfZ2MqN8ufzcGCwzOhwxak5FodUzbY/CYdoKTvh0ZqfQ+
00gCu0htKCq6wPtkd76YA6f8/tzAHkRG2c+jjGNgP9yN1BOzCSWjQvUXDPVg
WfWfbjVRsF5x2zj+gRviWA4+Tiaj0z5yyBj23+J54+BfxWT00SyZdBD2a8n6
zJR6GRl9u5buaQX2yfTEiVVkFOz/3SoRLMCQvni5hYz+VPjLCkA+UClaMqj+
SUa9DCIt/JAvmCz9s3f/IiOvhU80puB2zl0EtzkyapKX9E4A37Q5XXhkhYys
IkXuS0M+CtgZJpDATkH8Aj9HLkG+6vM+MuQqT0GZYsYTE5Dv3sjUnOhSoSDh
ibP+ypAf7wwZBcmoU1A5C9k2Akwj64mmzlHQqszJUe122C+/W5IuWoJDzljX
dEC8nb9jdTiYgoZtcz4vQn5WWd8s8w+joH4riedmkL8ZM0P5J6Mp6CGV270e
HEP/uT42hYIcEnXbk3vhexcyS7GUUNCmVQ/jLagH7Dvfzo+PU9BuCy/VvVBP
8GXvoZ+/KKiSjedCNNgx+Grj2BwFeXUtabOPkHA3rcDb0WUK8ryktbIKjp/0
Mx9k+4viWpa2j/wg4UPvbZo7jv9FJpfjudomIB7UDmVV+vxFD2I1uC7Mwfrc
LrBKFF9Cx2glZh1oyfg3zvFjPbCEiqn7svbQkbGGQGrmg8NLaFxklbETTFcX
NqejsIQO82qHy0H9dRV3erCit4R28q1XMEF9tho5+vSC2xKyvhRjW8VGxqcu
vU9laF9CWbzV514JkPESzhq/5fEPfeRWWuE9QsZOR6vz+aqWUZvYS5soc7j/
uEjiy/pltFddNebiVTI2Ovn4BVvLMpIIvaLHaUHGigrHr9P1LaPTPedOPb0G
41FN4ZibW0bag7+Z7liScbC+j02N0Ap69Z1isNOGjDPvqYs4Oa4gz9PcuUzO
0O84JrLOP1xBjwlvXn0ABzpRl267ryBBbbfPxg/I+J5LfvNVvxVUFpfU9fYh
Gct6irtpx6+gOAH7ZYVHZFwdzNC9p2EFWcbKWCl6kPHIu+oXbaKraJLPfizK
j4xbZxlmju5bRX9S7R+IPyfjCunTOmHSqyirz2hPLjgxs4bNUHYVVbOdLP3q
T8bX02oDB3VWkWXaYutAABlPxtUHTz1cRXfX486NhZBx9yDTgqb7KkoyjC01
f0nGdTvOns/0WkV7XfgP9r/c6pe+cdoFriK57yGcLa/I2Ca84SXpzSoKxaHl
GWFkPBvQFLrevIocGBiKD0eR8XAjG8W8YxUd7koufw1uYdG9WNG7iiYYjYqI
0WT8zq+Zx/vnKvpU0erYB77n0xLOtLKKtKrc1h1ekzHFrTVyu/gaKlhfe3Y3
nozHSziXnSTX0C8zJPQN3LVy3qj70BpyLDYM3JNAxoUP2wSi5deQ0Go6dzvY
5X579C69NdTgtOAllkTGazadryUfraEl9lXd4GQyvnjyystDHmvolnhQeTs4
m3by6TGfNaRU2CbNm0LG5lH/HJSD1pBA86XlCPDXGiFN/TdrKGXe8nRQKhkL
vUxWvvx2Db29/uDpN7CjmfQx0+w1JCFxuZw+jYzFycq7bhauoasKFXzO4Gci
1yguDWvo+mH/89pvyXj0z69f7t/X0M9/Gur/geWKHEe8OtfQ5o1w6ffg37o+
DQHDa+jj/nt9nOlkrOv2NjGRtIa4GLJiasBpZ2QiUv+tIWKRseQCeIPr04tM
6hq6qUbNEMwg4/fpDQ/yiVQkd23T4zZ4e/esTr0QFXHe//KQCr6T9EC1eTcV
WYwWB+3KhHi7synbLk5F/SdywxH4AT2X2OAhKjppWeH4H/h7S7TAj2NU9MjV
TTMWvD9mD/ukHBX9nnPY9gncJ3N8ZV6Viu7o2VnOg49SS+coGlT0uUhiiSmL
jP3rTo+v6FBRiavPA1Gwkrnhd3pDKopt+qCqBw6XHK1mMqOiXlatIEvwHOVW
ybZrVKRMI1DvAk548SiV35aK2LfTEePBy5fpXwvfo6LO9VXmXPD5PQEhos5U
xH/i51oZOGOW56nEIyqauZ470Aym+xTnJuVBRQkfLmcMgE19JBxkfKjoT0O7
5TQ4Xy/X6sRzKtrfs5udAmbbIWemEERFDx4rpW6Ab05W6KNQKhoekjzAlE3G
ZR/OaqhHUZFDzJ9YTjCfe7vS2TgqMmt6ts4Pttc0PXruDRWtMTLq7ALXbx/f
Z/AW7jdx8hMDi47c2WmUTUXftYby9oEfZf7lvvIB3KnfeADc7vwf0/VCKmK7
M94mDZY6xbhh9ZmKWpYzag+C32dm7eutoCLew00xWz7Oc17/bC0V6QmeP7h1
fbE75VEJnPR9dpn8JwlWmopKkWqjolAG7qC94Irzyi2x3VR0a+6NmQj4dMmP
f9sGqUjKRPG3ILhB7Kmoxw8qst69TZYbfC7wgPbCJBXtsNNVY94a31KL07UZ
+F51xzk2YX0MLe7Hty/C92bcjCGDB7/x16v9oyK7y38mJ8EWx0oX86lUJHRQ
idwLHo+12CFBt44MLshWfAPfJhJORzKuo8Wevec+gR37dKNcudeRaBHXuzDw
kirp62/+dcQf/cHTE+yWHfHHdOc6Kpp6zmsL9vEYUVHZv44Ss3WeKYGZfnnf
yj24jpKyyJZi4MAL+1+JHFtHv8V0iMzgiL0OE3Qq6yh9JSe8FeJVKJiXw0lt
HXGGBvrkgROWP8lNaK4jf4FGuVBweiNdQJ3BOuIxOkw+D/7kEHY04PY6alZa
Kf0C+0llQM5s/e46ivBkHw8HV6oP+d51WkdXjzh23gE38Ev0nfdYRytHjLbz
gwe/FHnwhq8jauIHwSuwfy32mWU8jVlHAkGyr6XAEyE0Hf8S1hHN2Nffy5AP
5m6clejPXEfWHC5LwWAaloGm+Ip19KdtV0cu5Bef+x5LHLUwPxXrHicw85CY
yJPGdWR7TzJXDsz9/s79G93rKFZu22Ap5CvxyxuC+2fWUYfsS1wE+U3jjaj1
B/4NdMGzfMrpDcRTFLtErfAGGvaRyJEGiwStjfeLbiCv4qmHPyGfrrp2XWeQ
3kA7nO1EzoFz9J+bG+INdDnvbTt/IuQb2sVL67c20JzBRVv3OBjvvyEe7rsb
SIhR7Ode8MxMQ4fE/Q10bZPWrjmWjGt7U/TPu28ghniLEkGw63sj3eSXG4jJ
hPfi2xiof1cr1M+WbKCHRT06kZFwvr+UQ29evoGqA1zPHwEXa8dUOlZvIAHT
YqeGCDJ+JeuEY1s2EMr6s2c1HOKbY7/S/NgGerT79RE9qFdZZcHHwlk3UX1T
73Ir1L+HO6/u+WG2iR5TuLwVoH5ePy9zefDaJqrVFBD+AvX2nDetf4/VJvoY
PbGhApb4lbzYfG8T6YztTcPPyLgzf7qixGcTGe7JjVb0JWMZHcerYdmbyEHg
FyvXEzKefuQbq0HdRCO/JJlUXchYeuYSa48uDT4WxHJtA/qJ7RwLTNWrNFjH
deGaykkyZih/nSsWS4v3P6sRY2Qm434ldc2ReFo8eCOSX4OJjHNLZkZjkmhx
6ZErZ59BP2RSqMzN/ZYWS7FP2DIRyfhDzogTTR4tvlZg1bqNHupZrJjCUB0t
fn/D7KDEOvTvrlnVEWRaXJgr9yx8kYRtj3/uY9amw88S2hsyB0i4orUru1iX
DpPtYo4Qwbx2Cx7W5+kwr18Qz3XoH8tT90rUXKLDr3bM6u/og/MTf4ijpwUd
HhXJKguF/vTziiXrP2c63M/5ZjUW+lvWcnbl8UQ6rK9ke4MX+ncLU0nO0GQ6
bL+cFf4E+v+Cf2o/T6XRYcXGPMM5OF9clXF9npBFh48nrAZ8g/PQx6SfXSaF
dLiC9/K3p1UkyN/Fd9sa6bBh67NfwuUknHX2emLZEh22ec1iXlII5ydpURW0
Qof/br+yfApcxj46UL5Gh90FYwQbCki4teMK/1caeiypFbA4kE/ClCvGQVUs
9HhnNhOV8BH6a8fzj+t30eMAC/nY+7lwfYyKUfsZehxPUa0qSCdhY/f1vxfO
0uNYHnOXc+Cxq6WhHdr0+M5ts6Kpt/A8cYXvnefpsUoqXccOsGDuiTM9JvSY
OJTu6Z9KwterpI8P3qXHhIHgd0/ekPDfP0KckxH0uP5UbV93LAmHxU3VxUbT
Y+GHzQ6u4GN6+R4GsfR4mIc1QxjskKc7X5FEjzXbjSiWr+F85uLZ8jqbHv+N
OrxMjSbhCcJkgH4lPS4sOuyhFQnnn6I8daYaenywbXxuKYKExW57UMvqYDz3
e1eSwdeaBO5IN9Nj2u+ao5vhJDz0SlubsZceB+bHTpaFkXDX7g/MX2bp8RkT
apDxKziPtLl/vb9Aj3PEml5wgLd7a7keINNjl/x7u2pfwnl98ud05DI9Lm3J
pT8Bbs7mq3ekZ8BsMcQqwRASrpF//HS/IAOOMpD9tBEI399Agz5MnQFvPx9p
c8yfhP20i32FNRgwNd2fsPmchM3UJJlSzzLggZ4gvkYw3THWbYXnGLDHnt3R
luBz3N/5eo0Y8KBgKE+cHwlPt14+IGzHgGNT/vMRewbxWF+XnWLPgCXvauku
PSXhoAq5wwcdGTCzuILvN/Dx90LHVR4yYIX+IuwAfhI8rGzxhAErZjr11fiS
sNA5K/2UcAZ8Z639gLcPrPfpng7pKAbcaj7xzgxcoax5uSCGAYt6F8ScBFsd
PGBam8CA6VvT3/7xhvhlm7OczmDAQyoez03AOo3OLtJlDDjyijStthcJ766a
XM2vYMBuY8F1B8CkEkN35SoGzGeyOssCjs6U9zpXz4CNNOaNmp6Q8OTz9Rf3
2hnwxIOEaAOwh6ZvQv4kA+6SIxve94TzqvktM5lfDLgi2uyWMVjcWVsw+w8D
Xjzi2YzADUlcockLcP9PwbBtYJ61uKevVhmw5slQQo4HCafnFNrdYyfg5dtJ
XGv/kfBqVfSBGU4Ctg/9e2ISrNv/eMp6OwFXbIt+2wYmEdWuXRUgYH2/pXsZ
YCWL7xfP7SFgvx0ywWbgVu5pRemTBPzSwzC01Z2E90g2Lr+VI+CajdJLFWBn
9K5ATJGAW40lzd+Dhe44Hd6BCdj9vg56CbasoRFj0SLg5iT1k5fBhQM/R3x1
CHg43lpYE8xMqo2l1SNg7jcMpxXA73YF8q0YEDCt3IzpbvDyQ0GW6SsEfAqd
Cpt5TMJaQdTaGxYEzNVM6zUKjksZ8R65TsBG/1W/6wSrtqWud1sT8LHbr6u+
gAMOHF2scSBgg+KPLa/Aw5j33SknAsacb9P9wEcMl22+PCDgCCflsv/A3d5l
4/luBKxJlx1jCxYd0upN9iXgPC2+bZpg/0rF3Et+BOw2XUdAYNJb6aeMLwj4
b1YrPgmudGQ/bhtCwA8zht32gg8YbbLsDCXgNakfj3aCQ5UXfrSEE7CazYkS
XrAlU3vw0dcEHPmu6x8R3DRbaTUeR8CLQ+J/N91I+ETHR+WIRAJOFWmSWQET
48P/rKQSsEDKkWsz4PRjxhpf38N4r89EdYE5BbV23f9IwCYv/d1awa4bCn/F
C2E90ceoRrDWN+Fkv88E/J6x2bMSnPdu2yOFMgLeXdmpVQYWCts4P1NBwPdU
wnRLwH/MRzf0agn4+XWHtTzwRfW2LtpvBMxRkp2aCy6VrMz+2EjA52QHnmaD
xTk+et9sIeCS5cD4DHAAJdmEv42A05kNZ9LAlL6wI986CNjK8pt9CvhKuS+T
WzfEH8Vl/xtwbcqDEek+Av4RucqbCD7kb104PEDAhXvGZePBEfZGgSHDBBx7
tSkwFrx58ayl6g8C9uXW5n8NvqWgoEj5CeNdXe6IBrfuluJOmyTg9g77qiiw
HEH4l+EvAg4z1pqIBCf+ZqtgniHg3xri8ltmal2P+DwH++NKTFkE2KFgzs5u
kYBzzbWct9wfM6K+mwLP4+kw27KqZ+uOtiUCjr/Q6bTlzJtfSV4rBPyGMle6
ZW7tvG/HqQR85Wf18a3nP5JJTpzcIOB5npWBLf/kDXsYRUvEP4IO522NT2fN
55wWAxF/t95WtDX+/FHnvVQiEe/+Jvc7Bixca0XNYSbitAUj7a35+2YZdlxl
I2Kdo3z9ceC5EM1MLg4izlgRjEgAX34g/6SKi4jjG9k9ksBlpgeMnHmIeFIj
MSwZLHFqx+F9/ESceMCtOxX8j3V90F+YiFcya4YywRaLsx+VdhPxdbOwNzng
+u5h/zlRIv4ab/PqPTgqqULuwj4i1nZfXiwE0zz7wMFwgIiRtsC1rfi5fefN
ZIE0ETtycq5+ASvI+oQJHiVi40TL9Bpw93XBk3HHifj5xrzzN/D9oHc9IrJE
/O0kxaoZnD3RK7RfiYj/1DzP24rvXWEHk06eIeKhhm2/p8Al5ZWqJZpEnLvv
v+at/WD4x3BcWZuIm4jV7YvgEFWvfafPE/HiCocqFUy32J1jYELE6Rox77hh
v8UL39HrMSPixuGk1wJgRU3aRZOrRJz5kC9jF9gpQer4dUsiTj6WIi4FntT1
LLl3l4hXrXhjToMbMyXrAr2I2Ouv/1VP8K3usltcvkR8YEJPdSu/MNBdZAl/
RsQfna3UQsAqxv/pxgbA/PTFEhPB7xk7OjIjiPit8bmvleAwy8ejdZlErPxB
5iUb5D+ZEC4v7RwiDp6U1+MDN39OE/ueS8Q21x0OiICJ29usuvOJmCddXe44
2OXr3tnxMiJe6E59fwVstuv7Cm0HEbec7uUsBLMLOhZ87oLvm6YdXQn+up3X
wbmXiLHjgNp3sASz6fT0EBEHMN7bnAbPkye7v0/DfAmRXLugHnh92/gYt0HE
vYlhuUHg49VJ9oa0jDjc4bxFHHiqTF2Ki4ERC7qrHc8G6+T7v/FhZsSK0epn
GsC8CXwvbXkYsU3fET6mrXrldOiu/AFG/HD+n68/2MS+TZIszYh9GGMfvQZv
s3GayD7MiPuLfoZlgx2vlpiJnGDE2QN7Fb+DFbXOaDNiRhygfuwiH9TDlt3m
+7suMWJeyv3fWeC/DYFj954w4tfsfx4sQb0dZO26RfVmxDw/DXezQn2u1BGe
f/aUETMbExZ2g0NaMtfiXzDie00qrFrgA+11PM3hjHjWS/RIIti8j1ZDMpMR
V3T9eXwR+gF1obPN+dmMWJl4o8kWLGUaYoBzGXFdzrSmN3h5cJeFYT4jfnfJ
riEP/GpU0dW3jBGr9KYub4d+o3bKOetHOyOOLbM9NwLO3v/liF0XI/4ybhG5
Ag69zVC83APzzZ/h5oF+xuLPq2qOIUbcaHcq+Sx4dS53SHmKEX++qX+sCHx4
6RdHzBqsyI1Aq1joh6IYzJ0uiDPh+iG1sZfQX23c4D/RJsGEt0vZROaBLata
/+pJMmE6Y+/nHWAZL7WHuoeY8PO+QxJ80J/Vb+5/pCnHhEWf/NCJB/9bJXuo
6DBhV2GP7BLo9y4vPn9xwIkJ8zSEZUhAP1h6Xk0n4wETnih62qQH3vOeyrbf
lQmrpS/Lu4Ln7toH7f2PCT9O37HUBPadufhSxI8JG3fFbT4Mgnw3tTuSL5YJ
G3R0fRoMhv50uOANXTUT/iq3NPwT+tUgNnf3olomvHp47tmOUBJmUVQ3uvON
Ced92RltAKaLat/W3cIEddpsqRpM0p93yehjwn93jWRlQz/cWrNf7/w8E9ZW
OP9fCPTPATmv1+KEmHFKusqLnBjI/4PXuy/sZMY2tq/OksE+LAc+MIowY+Ju
vSfy0K+7WRdbOexlxnXabFfrwDaiXW3qMsx4B3/+j2no7zXD2dP/nGbGi/kZ
jmoJJExwf3JR3oEZWzpN85mkwPwWZ1bK7zPjn8UXjmeCLa2MEs48YMYBe5/W
r4Kr9Q7/NnBjxi4Pky/HwXnDZ8+Qx11fZiywtG37dBrkk3q5rORoZlzx/u/F
sAyY7/YFWvZKZny1PZ1fC847ec9M34ZVM2N9I630DPB1aq3OjjpmzKsq9In5
PcT7RFzk/iZmLKqnYNYI9irWPqjWzYylNtfeXcwjYVrzt0Yuv5nxurF3kQec
t2gyzHPHuFmwzKZmplwpxOtMz90EXhYce1uKJQ8cIKN/yEyABTtaOjJKfyFh
/mK1nK6dLNi2rbpftAzqd93+rPr9LHjoP81pngrIRxOktHcq8LwvusUC1ST8
SfRZ/CMbFizVoZoe2QT7OyY3kLuSBZ+y6HZ2GCHhImrMs8pqFpzz9O9djlES
ppo/feJYx4L3fOJezwE/E7vi3N7Egp+X6/fM/CDh2GyWK696WHBmbudjh3E4
r5TdlOaeZcG+S9bnIn6RsMDPHY1cAqw4zlWjRZtCwl+k/Ji47rJixTeXDPRY
yZhLy1Hai50NB/7w9dquSMaDB1s7XEvZMOOsYYv7fTJ+H4/Ex8234cNvatL2
ZZDxldyTXDs3tuHQC2y+9wfI2NM36clgJjs+JaDcbspGwdseMmpdy2HH8ue0
JRm2UXDMLTvuyVx2rKd1nyMb/FFbPnk+nx3fVqXzW2Wn4Emutmq6cnbsq0wv
9oqLgrXjaZgkO9hxu7BCUxYfBfMVXQ1yXmPHA588Q56JUHDO9M7X7DocePrM
xbD+oxTsF+drMXyOA4vOjEY7H6Ngywuze9/pc+DjO3eych6nYOHS0ve6hhy4
tUfoiNoJCvYPNq0NuM6BXV+OBb2RpeBbJ6MXWVw58J5so8LTShS8x4dHkzGN
A6cmHz67+zQFb8g93taTzoEdDGUk0sF9sz/b07I48GlCzAOZMxQcYvjxypkP
HDhvj+R9pEHBmwcu3PcthfdJSk1ePkvBg23B8fQdHNj5bRvXHV0KLn7670ZH
FwdOSHlxeQYcpnhVMrmXAz90D+O9cw7mn3ooX3WYAz/eFcxgo0fBJS7N3578
4sDhdx/kX9Wn4IiDJ4L1ZzjwZ/vpvgGww1jsRdF5Dmw63+ZueIGC9+vcGamg
wPNPq6rpGlAwA21nSsg/DlywOX2zDjxaoGhjscqBBVfPMJ+6SMGlNsmHZdbh
/5CFgyXgyN2sfzc3OfDosFvn0UsU/D/esenn
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
WaFCRO+z4w7Y/wGcmAN9
       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV13c8lV8YAHCiuNe40UJpkZ8ipCGVzlNooZBVyUxDEqIkURkpmUmSlZQ9
sxKRrIxoEBKSdREy7nWv9Xv8w+f7Oe99z3jPeZ7nbLC4qmu1iIODow7/LPw/
ZtX/pYTutH98142ykt9s4FYVs+sQ1SN7rIu3i3axYXt0WMQb0XOk89X3Q3Zo
jbofWZGijqTaa9ZQ7A8bDM8xi4JFPYlPx6CESTcbylTF8j5GeJMYA/n0ZLSC
hErGxLoHZKAu8RcTzdt1L9ZAyp84rZGUfNTDhl/y91X9REPIqdIGg7heNoRE
i5RsOvOE1JebTPeij9GS9r2PCCWWQ+tUpfvYkDtcu3Nk3TNyRcSq8DXaP1VY
WkcqiqgPRxg+7meDunhcHP1CNBmgGayqQbtVhC/9oBdDagIaXDjpbNixS9bv
VOgLErTCdas1OmbFCe+HonFEPEBLXWaADbfqnpYZFMQR6uJYKSO0gVfnIokz
r8jz2h8pHmj+SXv3dxGvCeVybEITui+loOi+Sjw56hy+dg5deo5r5mR7PBFS
3bNHcpANzt9DnIfWJZJXxtqWNuiTj37l5pckkujJvfb+aDk1qUlP8yRyrePt
pnR095s8e/GXyURmkZ3HELr4MkcGXTWFaPvIb6UMsSFc4uhwTncKiZwKcJNE
6zxutT4ulUZedZ4WNUTLakgkilWmkcgnJpa2aF4um77eC+mkO3WngSfa4Wxr
8CnuDNJ4VnEsDG36di6zWC+DnF+eqJSC1lwh8WXTqwxyzWVU6j16j/3hUd/J
DDJjb17yGS1dd5k2pp5Jzq4w5G5Hr9gcKGcUmkke5cqND6IXeWVrve/NJCrt
h/2m0KOdzTaSSllkgwb3N66/bGjfN+v78H4WmR+tLBNA14RtSB79kUV6mFMW
K9H5E+rVBtJviMq7+VRx9Gtta3qh8xsyXHXotQQ6JMWfV+LTG3K1c4+mNPou
75v/Hohmk/Z/x2Jk0FsOB/lk2WWTGs2v77eiv3pdpf+szCbXvuroyKFvlWkd
W7wuh9z1NzVaaJfkkk2Wu55DrviFfN+Crj1A5TeqyyGzrY8qpNBOd/pt7krm
kpQ7fXIb0GuLK+qSbuWS1Z6HBMXQFbNxct+/5pLLPcethNBX93kEzG7OI7GR
CTt40CK3zEel7uYRVsSc6zSuR8lboqPdnEekP83tH0ZfmhLPuimfTzKmT93q
QAsrzQi/9M4nKzjKFOvRBU6t12p/5ZNVweNWRWj+8dCd6x69JSoTjw4+Qeds
cwo98ucted7m8NcNbWJ3kmm/p4BouK9cdQGd/pf2tqy/gJwRT6croo1kh0WH
yTsyd0EpZCWa43Kty6qn74g7T1zJFO433X6ffdbqhUTU2y42Hz0tdSHycUQh
+ZbscioUHWelPlc4Xkgc04ueOKAnuzhLaLFFJEzS4oUUOuyXi2rO3Hty0++v
+G08DwfWnIpr1y8mN25dW3UCPXBaaTFvajERW2wZuQ69duimZerWEiK7X1O3
EM/j1Uu7NnG0lRCPW263uvH8lvm8agzh+UCuUpzGk9AiCcu9N2//QOp48uav
okt6x3p1H34gZhUHWiYxHgifS094tbuUyPUvSRvF+HHeY+2pPedKiVVaa08y
+l2sH6U+oJRYdN8vsEKf+33Zeqq3lPwJ69vfiPEox0RaVuPJR/Kk5Pm3lxiv
jE69SB/9V0betG/bwYHxb+SnHjVWrJzw5qbVJWO89DbhtTqpWk7WrKcdNEC/
sbwqlhtSTkIDY4rjO9kgaKvidUupgpzUd5JR6WBD+b2W00tuV5LVRw/nKbax
wXixX07eq0oS1rnZvfYnG8buw9JLnyvJ41OG263Q6/3iy2vWVZGzhZutHrey
wfWpk0JQaRUp+LKZ9qeZDYopQkvW8FaTtl8DXtqNbPgkV25Wp1BNFOVColu+
s8Es0/md26lqktnyIt8c7ZfbYfc7qZpYb+3/a/uNDf0lqT9fa9WQFsULPre/
sCGq8Wjmtse1RDYRImzq2MA3f9f48Np6Uitqcu95GX7fS4YmsofqydEHLmwK
WvK7rJmQbT2hOPTH3fjIhv2JPyx/FtWTQM+lodqlbHibGJqTJ9dATD/toLGK
2fD35FChxucGEnVZ12/TOzboJzytuSbwlRSMqNsxMtiwSWe4/6Pvd8LqEDpe
Fc6GG5+VSdhEC1lVsSvH04oNq7KF2jk5OwjVcjCUth3X79G0XvfKDvKf0Ink
fYpsiD3XU1Mh20Gs6wL/s96G8XDF27e+Rh3k1lSqSYU8Gw5eN3uyIqODKP6Y
YHrIsmFXhOHrEPlOIrP0lcEKKTaYm7w+m9DeSSY0f1+OEGWD57HVz57RO4l6
5teSFhGMR7sCvz+c6CQ7vtpkrUIPCbpoXKH+Jr3wzv7JSjZcL9ZSVtz1m+z/
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
AzsmfIqUNaSZmuSxwVGxLHvlxymS/eoQ0ygfv9+O9TFBVVMkzGjExBlttMvV
l//zFOk/NivzFL13zw6LRS1TxLupmPEVvehgHG14eIqcyya6qm/ZMKHKMX1x
YorctrbtP4vuUTfu/cOaIlkFc9030FVHlxe1cLMIPahWKAkdoONpXS7GImf1
JlR4Cthw52SnPqxnkQkTLj5xtIP+vgPvNrFIQVkQUUQbnJpYlamADirrOI0+
ckabS3YXi7gvzdWwRSufTRl+vZdF/FZ8WHcXvcb8XHnEIRYRSCjleIUWtCzJ
WKXJIosLKYK5aA6rNRHBOiyiacrnWYH+c/G7g48xi0zX/0nqQX+3VjDhsmAR
7ZOCxhPoCptHR90usEhXXfj1RXifS7JTW+/owCLGsl79a9ARDjF8IzdYRDRX
GTaj/RxnGJdus0iJ2yznTrSdc3adqQ+L9DZblh1DW7gsfdvqxyLPSkzL9dB6
rjZx+o9ZJD1AfJsJWumO5C2NKGxnhRy9ipa+d+d8xUsWiTqTxLiOFvNs0zmQ
yCI28so0NzS/926VwjQWWc1v99gTPXc/RFopm0XYtbc9HqJHH4wuy3rLItEB
QR0B6N++mvOyxSwyktkaH4L+6pcwEF/GIpINPm1h6LIA7qaN1Szyo7TmdgQ6
N8jsQ2Q9i/BEfvONRic8LkwRaWSRzUkNS2LR4U9Ewh63soiszfjwS7TvU0cP
wU4W8Xlmo/YK7fqswfZBD4ucWH2F5zXa9rnsae5BfJ5PaveCzSJ91N1HWeRO
ZlXTwvO60d0K7EkWsfbw/hOHVnsBa5ymWaRhfZDJwvt3vozgGeVgE1ddsSMv
0FKvpsasl7DJBl69mCi0SLxeew8fmzgY2F14jqYmZnwyE2ITJacXkU/RM0n8
OT9XssnpIlHVx+jhlIsxBmvYhDuez8gf3ZFW5vtlA5skVSa2+aAb/nIPKf7H
JlNnIofvoUtk1TVDZNkkVP2bkys647JXyuQ2NiHJtxyc0DFJ5fyGSmwyVFnR
fQUdSF98JX8fmwjQu2ut0HelD9WJHmSTFpslMmcX9sPrCr82TTYpNVlxbGF/
6PYsGVbRZZPEOks+QKtKHj4ebYjjjbyhurCfJGMrBS0s8PcVmSJr0ct/81z9
eIFNVlkq5wqhF68/Ui95hU2ifh+p4Ub3RlYF9N1gEx6pUmM67uemNt7RI7fZ
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

       "]]},
     Annotation[#, "Charting`Private`Tag$1412#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"E(x)\"", TraditionalForm]},
  AxesOrigin->{0, 75705.39766224034},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {75705.39766224034, 134194.14341705912`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.824298040612873*^9, 3.8242980923356953`*^9}, 
   3.82429813150121*^9, {3.8242981660616913`*^9, 3.824298176536801*^9}, {
   3.8242982083601284`*^9, 3.824298217960371*^9}, 3.8242984236998153`*^9, 
   3.8242985578291745`*^9, {3.824298715458132*^9, 3.824298758898985*^9}, 
   3.824298874988576*^9, {3.824298998806142*^9, 3.824299033715287*^9}, 
   3.8242991058350334`*^9, {3.8242991747271643`*^9, 3.8242991925181427`*^9}, {
   3.824299348459031*^9, 3.824299399161998*^9}, 3.8242998156626368`*^9, {
   3.82429995723784*^9, 3.8242999881612697`*^9}, 3.824300035986576*^9, 
   3.824402715619132*^9, 3.824403565372157*^9, 3.8244040753208895`*^9, {
   3.8244045313146753`*^9, 3.8244045424077015`*^9}, 3.8244045900345507`*^9, {
   3.8244597723337684`*^9, 3.8244597868868628`*^9}, {3.8244598239264774`*^9, 
   3.824459832286399*^9}, 3.8244607548863125`*^9, {3.824460792430791*^9, 
   3.8244608269285307`*^9}, 3.82446090332181*^9, {3.8244622537026567`*^9, 
   3.8244622690710387`*^9}, {3.8244625160620346`*^9, 3.82446252591133*^9}, 
   3.82446331519632*^9, 3.8244640965597477`*^9, {3.8244819778500113`*^9, 
   3.8244820064930925`*^9}, 3.824542876625987*^9, {3.824542974073804*^9, 
   3.8245429990671363`*^9}, {3.8258487761344004`*^9, 3.825848814099954*^9}, 
   3.825849003581303*^9, 3.8258514173390765`*^9, 3.829891786807269*^9, 
   3.8298937357680793`*^9, 3.8298973639989424`*^9, 3.8298986377659893`*^9, 
   3.829901446361244*^9, 3.829902231879259*^9, 3.82990231250111*^9, 
   3.8299026392244215`*^9, {3.8299040784886665`*^9, 3.829904089724062*^9}, 
   3.829904239079767*^9, 3.8299095169318533`*^9, 3.829910624383667*^9, 
   3.8302450485985594`*^9, 3.830251498133898*^9, 3.8309713337680435`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot of 10 realizations", "Subsubsection",
 CellChangeTimes->{{3.8244045155536075`*^9, 3.824404548598502*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "4300"}], ",", 
   RowBox[{"i", "<", "4310"}], ",", 
   RowBox[{
    RowBox[{"i", "=", 
     RowBox[{"i", "+", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Realization", "[", 
       RowBox[{"i", ",", "x"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"list", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<E(x)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.824297892741974*^9, 3.824297997687318*^9}, {
   3.8242980437493906`*^9, 3.824298089410347*^9}, 3.8242981305437317`*^9, 
   3.824298175933056*^9, {3.8242982070728784`*^9, 3.8242982071393332`*^9}, 
   3.824298555191572*^9, {3.8242993940868053`*^9, 3.824299396655035*^9}, 
   3.824299801439788*^9, {3.824299955371066*^9, 3.8242999834643774`*^9}, {
   3.824404530375566*^9, 3.8244045416598315`*^9}, {3.8244622370690775`*^9, 
   3.8244622491452475`*^9}, {3.824542927472418*^9, 3.824542951721177*^9}, 
   3.8298917939383583`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
H5RwSyM=
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
7cD7Gn02lvn3PItIumRTHug77uyJ05dZ5PkCov8K7Xoho/JoEItcOn/3yWLM
D6q+MpeMHrNIR5ng+lm0/FVf+9J4FiGa/y3XwPyy7FqrifZLFrEWcND2Qs8G
hsqrZrCIyqvjsix0STB3o/QXFslpmpPgxXyWdc/mQ0w17kd47JoxOuFBbtLS
BhZ5tzVlYRj61kN3f6FOFrF5ueTxGsyHpk96N1LjLPK39oPyoRIWdKSU3KqV
oghl3ZMxivm15jf3L+U1FPGXrmPuKmNBoYLe7lAFiqwcSDgWh4599VHAQpUi
L81jOfdjfrZ9XnqndTdFHpYf6PuA+bs/5lPwwHmKyB2Oul6B9eD37YoHM5UU
qV4SGxtYz4L2coEx63qKGH/7vYJCVzGMzQqbKdL6qeGw01eM96BKMf8eilgW
mYocaMDzu1YVxseiSOShlrUbmzDeLtU8XCgzTY5Y3dWlY32cdvgatfbiNMkc
vnJbBuup2Vare0o+0+TiplvCT9FJHP0Bm69Nk1A5NZpkLwusIybdtt+dJhy6
d1avwHr84eMyA5On0zgvB2lLDLAgUPLY2IUv00Scy8xcYYgFCxt/7/60jE2y
x/n/CxxlwXpt3ln792zy+e5a+mduClJfJa5pLmSTJQ/f/TlKp0BFbJ+JYSmb
2Kxa2DiB1hyIeLa+lk0q1tqGyfBSsOfOOqPhfjbhPPIw0ocf+5tvxhFeojOE
p0P06ybsV966hSrfPj1DxJotpC4swX7s+7YjM84zZMU+tyjGUgqKdNuuO7vP
kC31R6uj0V+WyH3b5zND1srdPlIoTkFrXrbPorAZsuiYdD0X9ks0xveKx4Uz
5D8bSeeLkhTsfCp1Mm3JLImVocKWrsX1RgjJlUrMkuc+9x6EoSXvTve2SM0S
Zf//Voiuo4DyarDlVpglRm6GtfzrKUg2uWFtAbPk/Me526MKFCzkGDGfOTVL
Wqq0hF9vpKDjaKGu4btZMltWY5WrSkGFeTKXdQG6WUpGfhsFOUaPis6WzBKv
Us1dD9D3Vd0humqWPHn7OvWkGgV6wvKaf7tnSXPygmI+7BcT84M3hzHnyNHh
nYPrtCg4v+KodNeROXKFaT3Sj/2m7b6NB1qPzZFlFvkp6tiP7vHnuNlkP0c2
yR9LuYOW+xE/Uuk6R/49DnbdhP3r14zBwnfX5sif2z/7XPQp2Lj77NHQpDki
pq9YWmZAgYSPzoPgtDny4m2LqrAhBbzpYmU3s+ZIWK1Wmzm6fUm2kl/hHKlw
qS3oRN/umZ5x+jpHZFbJVf7aRcHgxevRO9lzhLGmyaJtNwU/D6w/FUejQdqH
oWdLjCmwGV7IuYqLBj++7BY3QRut7tuyjI8GRllyHh/Q0jcCYxaI0kDRWrz/
4R4KIqRdVe+K0cBF79ihcrRQrmUtcwkNWOvChmfQrD9r6bwSNFDN1PC12UtB
jVmF44wsDTQ4jy5fvo8C/T8ZPJfkaeC9pe7OTnRuYEzs1DoaFLrZrjiHfvHO
+evoBho06Dy+V4a+Iimi+VONBr9/2BacMKFg7C2r4aQmDaJa7jBvoR32d7v0
adHAvfCR62u0ecCb+E4dGujBaf9xtMIvc2aTMQ1u3CjJ9zTF9222u+DmPhqc
yNbQf4jWydtxTms/Dab3Wb3NQh+6u+H7f5Y0CNEOtPmH7p+QDT54GM8j5NYD
of14P45K6Aha0+COpnLqWvSNjfyJ7nY06Px59dkRtFjknLW8PQ2Iic4ld3Qs
x4Ro6ykaVHbUqd1C59R1X9RxpkHw21THTLSuxjelSVf8+4kNnZ/Q1fHV3a/O
0eA76VT7ju53z90l6kUDE99Dj9nzz29Ln/14iQbbRV0TmGYUzOi9TPe6QoMP
g8YPxdFBKU/sFf1oEK7w1EEOLbYkfFmXPw2OH10prYyO9bldFRpAA7sj5/M0
0QqDV68a3KDBmOUJTX10zj6vrexbNNjWF/94D1rnrcvP13dpEPFrpMccXSVl
/9juHg0Ms0QEjqAP3TxiuiSUBh/7Pi0+hu7/Z8pTHk6DLZc6uU6gzx42fHcl
kgYD9TL1J9GzxcRZOZqGefvEtdPoGwpbpfsf02B2iecSh/n1hik0RsbRIP++
wu35z2NnpG8aP6MB37Bt9/z3FezFtThe0OCV3YT4/O9nVwn/y3hJgz2+Zcrz
z9+hyvP8VBIN/lN9pzC/vqon7IMSr/G8WzJ5D8yvl29UsCaNBkri/xXP76/f
9ccH/wwa0Lg8beb3f/Zbh4dqNt4HnmXt8+czo924dugtDTaMXtecP7+gVxVt
j3NpcGE87dL/z3dh8T3TAhq8fRQZNX/+sZfe6vEU0UCiWiN6/v0o9L5mvS3B
+Gh7dHn+/eXsfp7sVEaDTW655BdaJzP6mNQXGkzee9ndgj4UcONzUDUNEs8v
L8+Yf/9/fC5r1mH8yBYviEW7WXhuGv5KgzWbvVVvooPk7SItWmggsOOO/OH5
+Lt30JjZhvG5ePWoNvoJay9HQQcNdv/Ve7IGnfVF87RcH94v3frovxjfOzZv
XtEyQANe1/A/tejKqLW1d37SQGr6ofQbdK/jYrXxvzR4Yq+gfBa9UHiYr4Si
AUNz00Q33q+6vJuBhjM0SLi1aiYffd9Rlqd6jgYlVX8FHqFFvxziauHmgNZs
NQPjeV//OPNXiAM0UpduScD7XbfZxttDhAP8b7266Y2+301R1EIOOJVnP7QX
LQIbp+jiHGDzK616FPPJgulH/5av5oADzqcVN87nl5db3OJkOSD2rGg/G/NP
iGXNXzl5DnjBW5X0CS2cRf+9SZEDfi2UtLeaz1durgM7VTkgpX1D6CXMbwID
eq3njDhgTxev/i0jrA9hnYdYxhzQliqw2BB9W/fStyv7OCDDuWKajmY+TW28
Yc4Bx66+Z1zG/MqwWl775CgHzOqE6dtg/uWrH/5Yfo4D9h/uL5jGfP7J75au
iScHJF/q2JyIDtooV9x4gQP2csWVHUTz3j1c2HWZA8KNTE0ysB7wGJa+mwzk
gJ1CHziOYr3gLoh6vTqaA5antvje0qagRVPXoOMxBzTdmDgsi3797lfnozgO
0PtpqJUPGD9Z20VFX3CA9f2fEr8JBWnJHe60dA44HMB5jGC9so5erd5WxgH3
pnPo2eoYj16JJeGjHHAtNvvYtDIFdyf3W5lO4H44N527gLbzYI8LsvD8PFlv
xub/f8TNeM31WQ5Qytr0+SfW1xOn/t44x88J3nl9DpVK+H4tNu/dt4oTgvXK
mp2wXp9Ref+N34gTTn2UNpCToqCwpiEpx5gTwnnO8gdj/V/kNOxzch8n9K1a
rzy5ioKC/2TlPppzgrCydeHHlRhvS0LO+tpwQud42cxh7B/es44zJz04YdHV
2LPO2I8wC4S298ZyQlrkZ2NVQazPhrax+ROc4OEoNJY3yYLxoWUL+sO54Gn+
o6XfqlgQGjNQFh3JBSbd8EIBvXlvhs/+aC74IiZ807eSBW7pxn8L47ig2NTE
bO18v3jBtyoqiQsKDG6r+GA/2Ufvv21SxAURWmk/t2O/2rAqjT/vNxdscFDQ
WDQ/D9Ve/nBumAuUZ81Uz7/Ffs1/l9e6US6YKwwv+5bDApP+nsGHU1wwFC6Z
FJvNgsqkxZ/OcnGDtLn0+y2ZLPio5h0gL84Nm+LWR11Jxfl5/06uUF1u2OAX
fzriBc6jRjnXJXZyA2OTVIg4+ojOWr7/DLmBL1boTNRznIc2MwWz9nDDkq1d
OnH/4bwqWr242ZIbBK+mJmTG4zxXc2CdhBM3uHd4u3PGsuD9p7KkZy7csOZH
clDwExbcLdy2QfEsN9wY0D25Aq2SukxF6zw3zIr/CtJ4zAK/4PbtNn7ccFYp
+6pfNM4He+xNnoVxw8JcX5ctkXheek31ChHcUCkzXVIdgf36doMDmY+4Ib1p
C8sBba+47nDpE27Ii/rI+ewhC94I/Dk++JIb8gda3kuGs2B3uccFhXxu4Alf
XaH3gAWrivupjEJuUG42jPpzH+fjdxaXtxdzw9KcvMMR6MhXalf3fOKGy9v+
ZPy5h/3+jZlbrnXcsDMyrv95CAt8DK4/yejnhsReKWX9uyyosz51ZOMPfP6q
/Om5OyyQ8TASTxriBpvaNXnv0F/iRB7ED3ODtgHP+s1osemYgPsUN3A0/yvf
cBvXL+KnIzSD+21nOo3cYsHbNcdpN+e4wTmHSzADbW227qIfNx3cFP7t1kQn
JGc5uQrRwaOUp9fyJguo4sh1vxbQwdfq2ANptHGL98DJhXRIj11r8PsG7o9H
59jRpXQQoKQ/Xkdr2lSb7ZGmA5+klHRxEL4fz3SRLzJ0eDF4VDQM3XU7rEpv
DR2uFogJnUIHvD1ssF2BDtPCuetE0DWigxoKW+lAegIFXANxvl9bPvViGx3O
Nwg47kJ7kJTM1Rp0yFsW0CqLXubovmE50EGOc+hfRwALHK9a/ArfQYebn5c/
ykcXRKi/FNWjg/n6crPH6OMfaasZu+ig772E9xg663tPx/XddDiTMjCng+b/
VxrNsZcOszPRQvLolJV3FrP20+FNErfr6HWcb7e41rsfoMN7zebiFvR+o/0h
w5Z0kDGs31CMnjovzhi0osO69adNH6J33WWX2tnQQfKfKMMfHfOsw7/Dlg4+
izhbXdDD74rg8Ak66O7N+WSF3lH730zjSTpUMzJrdqNDB4LemTrQIdLOY0wT
PTBz5nyVIx3GV7urKKHVxfaq7HKhQ03x2nuS6NvrlEc+utHB+6QAUwzdDotS
tN3xee3BT/nQmyymHPI86WD/VNZy9hoLrjl9X6PmRYcHDZoK4+hG//zejEt0
kN+xY9Vv9NpHcXEbr9Ch3TJ2Uz/aO/WadZIvHUY3FNh1oqtKTy6X96fDgqvc
Wd/RUm27muOv00EzuV6+GX2zSOO1eRAdYu6vDGtA/3uhEMB7iw4Zu0QOfEUf
urPC6u0dOiSZSDnOu+iskMqZEDrENRU2zf/9Oss5xooHdFhfYB05/3sPtg93
VYXRgRVln9aKZkt35fhGYLymgWQ3+jhfXbByFL7PEZP+QXTF7yL73hg6vKOm
uUbQW+rfbA+PxXhdGuNFoR/nPBMziKdDrFbITjqeD8/jsCHWf7gfQUVnEbSz
f0BRYgIdZL+U/V6Jbjp1PtIqEePBLq1UEZ2w+eDOD6l0UJZ8dn0veoH4rpXn
3tBBw1LL0RbtNas+LpNFh55Qw2TP+Xj4LBEf9J4Ol7RTSTw6PUXwono+rr/B
79579LLQ2X2/CulwLCNVqwE9ZN05u7eUDlrOvxMFMB7NdGsbOD7TIe3oAcd1
6Ny1RUlvyjE+yuqCDNG3x+IPLamlw7Pm8MZbaKWbJ7Pav9PhS77/J0m8L+Eu
lndC2unQ2tnkaIieMzM8vqOLDkOlfM7n0DWr1os+76fDuXKZwHK0W+YfJ6cR
OtylXRW7jfez5VGH7qoxOvw4syC2AL3Dt2Z57QQdohMcgsbQokbpn1XYdBhb
r+Zii/kgo9NDls3DA4H93vf3YP6QKLVnJ/PzgPHBQo476OuJFvVHBXigprmn
ogJ9wFPNr1iEBz6uEPPch/lokjnTelOCB6bWHBI6hflMXfVaqLgyDzCP7FrR
jPmx0VZ8a4wKD+joF/vJBbPg3N2UJklVHjDQ0RbxRCf1NS+T1+SBb9O8qUsx
v64MVYzbqs8D9etNes5g/uUcaUzef4gHyoWHKwxDMR4kHPc2HeGB1U3Hs16h
NQw4Rg4d5YGCd/ElAmFYL5+sV7E9zgNj/x4af0X3G/u+c3XmATlHDy43rA/l
r9aW3bnKA3sSYgI7H7HgVGP+KZHrPLBpaJ/P/igWcHOaMcICeSB3O/NBGVrr
4BXj6Ns8cGGJoMAbrE+pvPX1r8J5ILiTS/kh1q/Q496dZa944O+DhDcPnmL9
XFnN4qjngcS3p7UsE1kgJH42830DD1ht+9DNQn9YuMjNo5kHfieEZUcnsUCO
//DgYBsPOA6O/+5LZsHf0f7G6kEeoC9POBOA9frq59k3MbM8sNRo171ZrOcJ
7krOaut4wVbddlnRB+xHvtzpdvXjBR6RCjvtVha0MhtOsf15wcMlaEisDe/r
bom/gQG8MCI4I/cDHVL1avrxLV7QLGClP+jA+1tXJlYZxgtTXsZjw91Yb75x
7Fz7ihc2bj9S8OUHC0oHPBK76nhBfVeV5jD2PxHc1u6mMnwgH7PC4dki7Kfa
M59ylvBB91xJqAn283cFLl/OLuUDCVF7ygLnA4aGrqXjZz6oUstda43zC2dE
nWBjFR9cTDFsPX2Agn8mfy+8/MYHQik79l05hP33R/m9+/7ygbDAaZdIW+yX
k6OmY5bxgxtrw5WgsxTQL/uZqbnxwyKliOTyEAoyRn6xCs7xg6D5KYi/R8Fx
e8sn+p78MCDrt+bifQpK9m74uf8SP5iW5AzJhlJwTbrNx/k6P8ChNxIeD7Ef
/rQtMT6SH3QPGCUMx+D6Fg5zCBXxQ0mUV8++VxSkBx5+EVrCDwcm4sqEEymw
ZZfuXl7Gj/3y1/JKdFFfzEP5Cn5QW6qotDOZgqs5Roo6jfzwwaNuw4ZUCjis
X1he+Im/J6bbUJdJAe2l9etuUQZ8ub/UzbqQgtJfTc5PFjFAx51ezfyA+91o
onRkKQM8t/n+zUYvydFJbljBgKs9B90EiilQKpNP/CTPgJ4dZYbPP1JwpO/f
8xQtBuzhcO6I+kJhPXa0P6PNgJuJXrEq5RQMOvbJyusyYFOPIqMCfW6s6Vmc
IQMeSXrUTlRQcJMr72moGQMSaUfpmtUUvJUKfHzRgQEuhYPv/OspuHKCZq3q
xACtdYrmPF8p0H3ptWLMhQHuAZO+geiajY7RTh4MsGh4F3i9AZ9HTB7Z+DLA
J2hIwbWJgsXWy8P1wxkQ7rsve7aFgta4UHOuSAasCQ+sOv2dgqd9gosKoxhg
yLfIrh6t6EQLVYtjgIzN/bm4Vnyed989hSQGDDw41q/QjvP0o9d3RIsYoHiK
48JUJ87r7EeBRSUMCNjjaGfYRQHbOsDvbBkDophvPkegA1dbedRVMMDAZDPX
5m4KopMYVvebGLBbSEfEvIeCLqGJAztaGDCR+P5dJFrOrWvfv1YGpB1a0dyK
Tt2So2vajc/fd+SMdS8FH/NPKIj+ZkDMVFbbnj6MbykTuaK/DChaZbIgEL3P
X1Py7D8GbBh5lpqHbtm5UKxukgF/XaJV5fopWPVqVvAqxYCKXd8kLNHHBX7y
Ks8wQEmR0ykI/aemcPoeJxOeBzsa9aI3b04a16Yz4T8Jm2bhAQouhD38O8LL
hI6K+Eo1NNch5x4TQSa85H36JwhtkHuwjWMBE6joNeIp6Lsr9ZrSRJmQ6vjg
ZS16ac/ycpGlTFhi3MhaOEiBlR7vxw/LmMDldy9HGf30xb98txVM2KY63bIX
PcDfniMlyYQv1ndszqAVHD+n10ozwVbwo8F1tFtVRpKfLBOafaQfxKCzNsY+
3yTPhPxla0kGWnvc89E9RSaoye1914oOsLAN1d7IhMvrrwf9QVe8Nb47osyE
6/73smbRIhJqQXFbmECO8eoK/qDgwBWZqybbmLBB+vLGZeioTmFvDg0mfNpz
+5IsunPHtEfadiaUPqqV2YCW/a/f5Rgwwbvv13pVtANv3WkRHSaIqfuFbEe/
Pp1n90GPCd+rVUx3oMfKE6zcDJjgxEhz1UOrK4VaSBkxYcDr6ZA+2ifEx6TW
mAki33OK5l3yz8HIbx+uf8mLcV00w/yA3qb9THiqt/qaNnpvtjbpMmdCX0K/
kyY6VFxR7Z4lnn9acvoW9LdLSzdrH8bzm1E1VUSvbOdSHLFiwuEDBrtXo+3g
r1ycDRO63zyLXYJOeNoiaWLHBCH1xXsZ6N/cpcs47JmQrXbaYhrPS/lkmlja
KSbobHR6+xN94XO00LEzTPAvG3NvRuetD+ITcWaCV0PDjRL01q9LKu+7MiFL
hXkhFZ3q/eKe2Dkm/NJXm3g0//4rS5ctvcAE09bFT+fft4TngY7Ii0zsdyOq
TdBhK/vjl19mgvWOzNtb0UEudMVVV5lQ5+uXOY3xxbE0bCT2GhO2Wy+SakVf
LJTJkg5kwsoRIYn3aCcRXSJ3mwmfNy8pdEebvrlqohjOhMeV2wsbMd7LD4su
fh3BhHOqqc8T0brcT1s2RuH5Wd6V8EGrmn+wU4llggwtP0sKLTE556Hxigm1
Xh+em+N9C38SrJ6XxISCOxaMVWhhg1VzWq+ZwO05OdOP95czUitoRwYT6O9r
ws6iB9QvPzLMZ8LrmJpbF/C+2/QIHC0vZELQ/tvntqJbbkWvNi7G+O0J+PUP
80dF6/ukfZ+YoBIyd/8kOv0KlW9RxwSW/79sgvlm/Zqb/t++MmGLYNCGf5if
nlWLGxxuYoJWh5x6PPqhpFqtdSsTHEPu8XOgvYvO95zoZ4KSkVhkIua3cQfe
hIFBJuwWaUs1RTsvfOh4egjjX0nQeqqNgmPHs8Ydh5mg2jjjRdD6POO87hQT
4p4tLcrF/Cmy66zCVSEByF9g/vNcMwWxH4SZ6iIC0GkYKjKN+XijWvKPkYUC
cM9WMtwXvUd+8PkxcQFQfhnyNqAR6wGPtZS2jABENoVe8sH8zl1suJimLgDM
X4uvra6h4IH6wFi2pgA863lWHYL1Qjr9Wr0LEQDPwSf+7CoKIK4gpENXAC6P
MuWrKym47LOFWbBXAA61PfM6hvVnQkOKduWEAIgNutE0Sim4/ia/fcspASi3
27wtGOuZ2Pojeb8dcP2jJ/q7SjD/LXt40cpVAGYu015dxfrnOiUwrnlJAHRz
a3+kYf38kTH1YzpEAGKsG5U/vcP6olhT75UrAKervr/8jvX4yZDIZa4CAfBp
UbAQRtu+3C9354MAjMiXVmgn4fdlmi7ElgpAkDBtUTzW+4nl7SvKagRAVnWb
qsULPE/Gr5NifQIQJnIvMyAWz7ufl50iKAhXhSQDGdhfpD4mMr3WguCbF9D5
w42C0YujvMeOCYLfi68a7a543yxeDLXZCUJ4qWV2rQsF74WF3zSdEoQ33QZi
WU5Y/33btcvPCgI9u/um+2kKvttePpoeIAgpvHXhn20o4Fnz/pFviiAUqUxm
tO3BfP16q8iKWUEYOnIuly1Pge/1OL/WV0Jw0GZmcUANC5IHV0QJ7RaGB43t
YxGXWBAUc92mfY8w3DUPypS6iPOX6W/ZFBNheBdplP/qAvb7ubmpxhbCcDjC
+HWeB86DwYdLb9sK45y1WnvABfvjrZEjDC9hsBEOSt51HOf9a2IGvM+FoVwt
OczamAWz27wFmxKEIZHPIX3UiAXffvfUPU8Uhp5iML6xC/tNizdW+mnC0Pjj
IlfWTpxn1pmeu56LtjgZs2gH9qu1wY+56oXhwkOPlj9bWZATMGlX3yAMJ+R7
g29vwf5a4+ja+GZhWDPn8X2dCguM/lPK2NEuDJJi79VPb2LBuwuVn/1+CMP4
FnPt3+txflLcEmzyC9dz5Xx18Dqcj7qjzaT+CkMgx+is8loWyO927CgcE4aR
K/Y7L8lhv8/x9VnIpDBkg4idpCwLOjM1HGwoYQgtuyhbuhrnN4f4DRtnhGG4
diLYUZoFD1cxx+fmhEH0W2P8QikW/A8Aq/Hx
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
69fzqsiw6vYeFbtUJvDt2m/p9o0MbuYnMrlx/+CKbhZsryfD+8gIsWO4v8yY
TF1585MMiU0fT5HSmNBYqXjUeIoM26gS/W24fxnSp5S4Z8ggfVcIPcvG+ymX
t7KATgY1jdAiG9zvSvwPFKzn4PPg+UKChvtjuradPGslL2wf99inko/XO+3F
fKwUL2w9t0GXD/dTcrddu+laXrCclA6awr7Nt+kDSYYX5HcdHGwvw/Xq9MnR
S54XervyGe++MMFFtq1pvxovuPkxT3pW43qNoqSOHeAFh+W5hpMNTOC+HmCm
7cULrgWPX5b24/WdHp8rucALCafvZbT+wufX0TL+4CX8/AedW6P4PlFxdMvo
sau8cKt+x7X/8P3jtlyPv0cQL1xM5kt8PIL729cd75Ke8cK9HUiobQavlwiN
SCnnhbUWGlXJ+H6UddfqdWQFL2SkeinQSCywW6gy/K+aF4YuHVbfw4vvX39i
nyrW8sKk2xO9bn4WBH4y2LyvnReE12SbqAqxgGjz2vLKKC/M1wZ0y6xhAeGN
TcaAMB/8vuXlqqXBgqrxDo/41XxQ37ROpH0bC0LVTFStJfhguftb4CVNFoh/
2pfWtpYPFJJ6sz5r4/tbteK7r4p8kEEMlrMBFlj/mXmVrsMHW6sGn8wasSBf
9m6cnwsfhIUvfT7pwgLv5xkPhMv5QMTRqyzmNQuKlIPJQh780PT4jm0hvq8K
6XurBFIEoKs15n1sBhu6Nze2+H4WgKtfW63VdsxB/JjQ9RUlAjCrN/ZDeOcc
2L05pvCgTAAkz188TN81ByMbOq4kVAmA+H+bF7PRHDD/611b3SgAu69fclA4
NAdCfONOon8EwH6y81er+RwcHCItpAsKgoFRmMtB7zngTT6csmOVIGS42dlx
+cxB7Zn7R8qFBaEpQmzh88U5ONZDSWwTF4SDI/r8qr5zYNu6+uCCrCBs3x1u
tuw/B1fL1z88rCkIWX2yl60fzEFmHNowaCMIHcotL2iv5mDWb5Z05owg9IbP
+/ikzoGmxeuxHntBeMZln8t8MweFVGp2h7MghB5uPsd8PwdVN3v3fvcWBKm9
7JMDWXPQZXf9dNYdQdjhIp/mUjwHPBsLn99MFwS0t6htS+scHF7heWMxUxAo
CTvmr7XNQWifnJ1ftiD4NmoZfW3H848OUfL5JAiuWvznT/ycgzW8Jz85lQtC
94ecwLO9c6A+xm470i4IuicKL6wfnoNTGZpCa5cEIX8uYUSZMwe5J9mURgIF
zt5yfmo6PwcUngKBWyso4NKcP3RpYQ5KrfeQR8gUcDvkb/9paQ7k+PYv54hQ
IMJV/826FRwYcjCZMFSiwOTmEJHL/BzQWSUytqxMAedTr2QvC3DgaWHrcJYq
BYKdn+X7CHJAT9hyUGIbBRrtKwOcqRx4W2LTNahDge+uz4+qi3DAQ8rt2zUz
ChxP2dpmJMWBqsrN1VssKLBDjjUh/x8HpL2mKgZOUADFjF2fx26s9i7VO02B
Pj/35bi1HFC/6Jsn6kKBp3uMPaplOBAis+tjtRsFCvYNyt+X5cDv7wtZfp4U
qK3VMzKU40Ck3M30fh8KHDisPVy1ngOshjsp7/0poHyzZ0esAgeMr+olnQ6k
gNUPhqXhRg6kKvAlCgdR4LR2+wAb++T1BzFXQigw522yVV+JA583RUbsj8Lz
zRdOrVPmwM2gxIDutxS4tTY7yEKNA4KXSfpn0vD4hrg3tmI/d3YXHsrA80+t
vXlkKweyDbSTpnIosEbsg/Vudby+Qk0VXCUU+J0em7GgwQHvFVoP7pZR4Cdp
F8VpGweW6THmAhUUaIvNWN+ALfHDeWj1NwpUbkzwjt7OAYM4AlmpBe9HkVgc
VYsDP8IdG9PaKLAl6GumE7ZDQG20+g8KqGSX+xZh33CIVtrdQ4E/Ws9U7XZw
gO/40nRpHwWoibelPmA/PeRQcGCAAn+j2j8vYmduUjM4+heP7y9nw0NtDuxZ
80SkdYQC6XuXRtuwawQXuizH8XrL1DhJ7sTrT6t2s5vG50nI8M4zbLG802EX
5ynQ/aXT6sYuDiSlVh7nLFJgJmao+wO22nNlaX8CFYrD9MV+Yx++zsoI5qZC
8DqNbJ3dHGj3OHVFkEyFlXePiJ/DtrP9Ao/5qPAmZmrbI+xr+8KbXlCp8JAo
HdeJzbud8UxGmAq7CY6j89hPFKzsUkSpIMWXPC21hwNyEmWbNolT4QQ/5Ghh
Z/BunE2XpELWphR1U+zd86GFGmuo0PdV190F++v4zK1P66ggdDPU4Sa2ea+l
4R5ZKhis50hEYg80FIuWr6fClyLS/RRsz7INPQcV8Pcfby/MwV7ICkn5rkgF
XSny2zLs4GSau7EyFXy5yZa12KufHNds20yF2h3lla3YL+9+XjqhRoXYuurZ
TmxVX7nqXnUqjKxKH+jFLnQJDrffTgXnQEpEP7ae9aTFsBYVnrbc4f7nViMz
Gfed+H1Dn3b2YJ9BBcPTu6mgXK+v8QN7Uk3mwyVEhZSaoalGbD+5O77ze/F8
9Xd5VWOTRMf33tyP12uUk1eIHcltysd9iAoUz+6KNGwZVl7zvcNUyKt5Hh2L
nTa89gXFkAry4gyN+//mFxtk23uECsdO7RH0wXYwnZBPN6FCqMuBDSexgWQ+
dt0Mv99JyW8P9prPnzONLKjwYJh/1Tps9vkNl9aepMLOqdV//+1fi3zorglr
KpT/vkTowA4Jt6oKtaNChfp/y7exHfd/uW99lgrWxj1DFti6c5tMVJypENI9
u1oRe86O0/XdnQonS88cLcXnq1XcLvHFeSrsz3SxDsbOrP3m6HqBCoe0lXON
sJ01n03z+VLBsOiqeSM+v/vHCHmdV6nQUzEV+wBbOsH52tsbVOC58nuHHnY7
7w6S/m0qcPqPu33E9ZBVHF8reZcKY2njJGfssAukxyP3qPDcSHVBHPtAT/ua
e+FUaLohz/DE9SXzWGfA8jEVMkrkFsWxFw6+eq0YhcezycrhX73mZF5U//qc
Chb+xhYEbLnbonqkV1R87p0JTrj+l3ZcE+xIpcJwi6oGB+fDz4nfza/eUWHg
l09LCPZDi+xTBz9Q4bSPqEMyzpflTaYXgj5T4XsZ18InnEedffk7zEuoYG+z
0KiFnRspu7ShnAol63euz8H55bFEC66opoLI49ZDKVs40N0UHreihQrcr/jr
zm3mwKc7LPuWNir85rtd3aqCz8uu00pJP6jQTblmvAfbIEU1R7eXCs3ZDDES
zsuCK3XfAkaooLfwJPe6Iq7PzdvDTcZxvQ+4nm3Dees1EGMmO4XrfbXzx03Y
ioZufaV0KjzuidCtl+fASmJr8kMWFfoHM26vwe7/uMvFlkOFMEqtl/MGnM8u
SVvUFqmgpOQmkIXz/qk0P2N5GZ9PJ0mLOdwP/geY1mcG
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ph/6mfA/qembZw==
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
w6p1h+aMFtHjVYLP2E0E7LW2+M5tsYhODxSeicZOC/d6InJ5ET36cT6j/AcB
s8e5H0peXUStEhzd97BNZCKiN15fRGRLXWk7bK73Kd5KfovoyTqFRl7scyNl
pihmETl83fHKspGA0jcGejqJi+iIsrjGf9jrfJv2GqQsovUHpavJ2DVrhraY
PVtEcYqprJLvuH8/wLd0/sMimv7q4r4dO/flqy0dZYvoQaDiBSq2mrCJqUHV
IlqMuRo80YDH/zsxU+nHIkq9b66ZhV1msq8huW0RlS/rfLuLrVv8iyXUg8ff
fDb4GrZxpKIhbWQR6YoW2OzGbmI2uNmOL6IRCdkAaWwLG9fUJjp+3oc9n/mw
bXZ8pL9dXER9qV+SOutx/CXbSMhxsZG26+n/KrAvruDVTeBjI0vhmV852C6d
hxM9V7PRvXrD8DBsptb051ERNlqwlQvwxPZ+HT92cj0bva1VCr+IzbFuz9p6
GTZKPznwzAo72K9//355NqoybGg1wib9DbqQs5WN6B+vrQHsyKPy96V34Pd9
MTqjhr36Y92HezvZyMCxt0gBO37ztWGu/WzUXJsmIY0tHrWW6qbNRqEMoTsi
2Gmz73cO67ORgmj6EhVb1s7a7rgxG3m713mRsZ9/44qoNmMjjut8i9zYyurP
CnZastGX9C/+y3V4PVIN+19Ys9G2omt8i9hqJBpJwp6NBrP8785hv78Wuz3i
IhvdLj4tPIu9v3vnKbYTG72zcktgYZfr9IY4ubFRz0mVdf+uH8wOyOn3ZKO1
gzP//32tiFyniR8bqVxX4vj3fOOAWq7yYDz+pV0X/r2/edRJeUcYG5G6Ayv/
je/EsTXHM6PYSK7PYd2/8feUFPmtjWOjVisDy3/fZ7Pl1IvQJDYKVwqNWIc9
HM3RzEpjI51i72wp7EvzmYsXnrBRNCm0ZAv25FkDua6XbBRXtFz037/1rJ84
YpjLRrIrtZL3YrM07nt+LGCjWv4nF/T/rR9/d11qGRs9dpDLt/u3fq5+TGoV
G1m5TG69hk3u3SQd8I2Nzvkrhvn/W6/cK65n29jIhKz789G/9RJbldLSzUbZ
k1/a8rElggqqdH+x0cuPrGdV/9bn+JKY/DgbeZ7Jb578tz6fHms/oLPRlXPN
ijw4Prcq6Dnys9goparDXBxbYzGqbJxzCfn3vJc2wNZ7vNHhjcgSWmmcZ5mL
rZZIkauSXELvZqhatdjSdxeGujYuoeX63e1D2POerXY8yktI1N+USxLnW5bp
HWsLWELZt7p33MdO0nNff0V3Ca0XXbZ6gx2672yP/6EldKgoYdMPbBuFfVYv
jy2hSK3rMatxfq/hpJuzLywh94LJymRsDlav8GqnJXRJo7axDHt8vLZZznUJ
DfdlXxvGrurINDXxXULUU13OqrieeOaeOJxxbwltupqpXo/df6ZMx6B4CWlU
mzyVxvWszjyL2/rTErISmz93GPudYVK5S8US+sZVk+mFfV/TDZIbltDJHsmk
NmxdqvzeqYElNMj3dU8srpevSqN2xAkso7vvtddvbiPgxvozMr9OLaN1zTxB
Mbhe25moHu+xxdeFivXqsI2DOMPazy+jL5SXJ3lxvZf7m0Gvv7qMKo1krnhg
t7z9U1YcvIyYS4sCdt0EqBq5nIl9vYzmAypUtHoJ+OMVkqy3uIzKd5S6bv2F
82vcXKD9MAc8LXtQ5fwXzxeVRqqY54ACmRfPjBcI4Pn0MGdTMif8NSg17iIz
4LLah06yIRfQg54UGYjg/b6x9fW7w1ygy+Ew54O91pHm52DCBTF6obq52J+e
bJarNOcCO/pNThFRBqwRiXbxt+ECj8H9CsPYH+bsBVjXuYAX/A+GiDNA4BNl
31A6Fyjrb0nqXc8Am5MKK2MyuOCy6KG7wlL4fMbSHjzwlAvO2H4vMMQ+o+p5
J+0VF4jvTsksxs5/NNhqVcgFf7v75B/i88zJ4HdOP75xQVmQn9AFfP55ZWCX
XsrkAqUP9vF7NjNATXnjfjTHBd9WarvewC6l/Oz+tMAFl0x+P8nHbmw+LfKZ
gxteU4NWbZVjAHHa8u4Xfm443KW8WXYLA/a7mPjUSHFDJrXuhKwCvj9p/4mm
g/h65Pfm61sZYOnLZhw14IZ683s9pdgDZz7GNBty474y+yxJBT9Pdvf3FhNu
sAyjTCdji+WoH2y34oZHn1jb67bh89IXZbUeJ264099ro4PPd4wx8ZUj8fh6
HeO/TE0GxKb8rk5+wA0ZtMjtfDsZsOPIWz+zZG44k1jOvIR9Le/wVNkjbqgz
3NSotosBEx7+DQ9fc8MHlfP0H7sZMMw7EmFazg1R1lf379jPgOCiPB1SJTcc
kxrdmoG96aLfYmk1NwgW/5pdg8+ftnWiV5TruWF9GP+WWeze+4aGfB3c4EyX
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
VMIGAcbyMhXoddyNbxoJ+B+Gtwx8
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+6Oh+Bva93Ja7QoNXjgIprpJ6OcddZKK23jhDutLrTZ6WazKPXV9Xqj8nOoT
gfWGe7jmhdU+XjAzzP86s44DP54qFV+6wAvtd3mLr6ty4FBN3iGRMF7oORMS
vhdN5d5Nj7uI8z+ZWr8MrbX3vFliNC9YaZcbPsb6mL6gquppPC/8mCPbs7F+
xrqebSl+ygt9Vm20j6vx/C4rm+Cq4oVB9wmxCKzXTAmf1+9/YXxeX3y6Ff1p
4aLjJ+p4ofA9u24A67sCv113dyMvbMqs5tmNHmR11pR184JGxaknEtgPXPg2
m5k0ywu2z7LHr63E/eOn6qW5egEkUsUW60phf/H9Upt38AL4K0xdUyfMgZtU
R79dcnwQ9Oql/U7sj2ZdFm+qUOCD5ubib2zsn1w/l4+ZK/FBuVet5V202gWd
k2aqfBB7NCp7CPuxr3OKpw0388FyFZ6+WA4bOJOsQC1TPnhWvau6Hfs96+H/
olb78YHwsvese9gPf7DQMX3izwcnX+0NMUfLpE8LKgbwQeH5auMZ7K8HvI5d
lj/PBzd9mkP3osP6dl9dEcEH98+n54phP5/VtfyGeCIfPHUN5LmB97OFTa9T
uAvx+x6HisvxPn5Z8Ny5N0V8sHfF1Q9BaPpWXVuPb3zQf5pv4To0981KRk0p
H+S6d3Zdw/v9iOXgqSe/+UDLSs3Mrh374S+K5haDfBC62bBlroUNpqODSrQR
fB8Xcads9FeZN9ScUT6Y1Xxi4Yn+GKiXIzvJB4HU7xcbmtmQpuksz6Hyg8FH
J/f8Jux/X9yeSpLkh7xVshl3GrC/bXCu2SXND7FuTk/s0aH01a8WrOAHjqHr
8qXoM+5v3Y7L84Pe1IKoW/VsOLLyV4WuGj9MRdmcTPzDBsM45uNePX54vkPa
6n0dGwo//7qQbIjjSd2OC0bDSKLDHhN+oHze4GKI1jBfs/CjBT/UXI9Mqa3F
+ym/4flrdvywWlzjy3QNG2jngndrHucHSQHPtc6/ML7DfRMfffnB53D7y41o
Vzfbu/r+/KAqFZexAF1ovvaf1Rl+UDC8Ci+rcf4yjYFeYfwwebw9ioreeMNQ
fuwiP9RKqa+pr2LDX4Gs72ci+WHP9kMWGWjdschF/8Xww1eDZarOaOrXzc9S
b+HzDg7aXytx/G33LVYn8sPdPm2pVLTrKyF2+h10jU7geXRhQifkpfLDf5OL
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
N4fvl9TFc/4zG/4HkAm85w==
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
UAwJ/wN2BCJU
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
ovi6fsn1u61MFFj1Ku5KtiiuUr1ok9DAREM+18vTuaK4dbn4HHnisHY5h4t5
opii89Qls56J82NC1ni+IO+viol89Z2Jy4QOvjj+ThQdzzbI9nxloupfVsOe
RlFMHrTb5vSZiYdz1OdLz4iihhzc41YxsfAgi/6FRkdnJSuTO8R0gWKRq3x0
HFaVFt5AXGazTbBPkI49XtPxRyuZKCesN5svQUejDAud9nImdjuZDe5eQ0dd
p3FH/ndM1BGT+DurRMc/il48OW+ZeO9Vfe9zZTpKmvIVHiA2EN/ftUSNjncK
Vjs/L2NiZqltc5cOHYXf5c47W8pEF6nTHy5Z0pFjFCev8Jrkq2J91QZrOq5e
qpbWXsJEmbPD5R0H6Bgp/sMogfhLlXuZgR0dRY/XiEoSq57zLlpwko6UeUOA
7CsmhshuLag6TcenT3ft/lPMxM6P3OcXXelo6Zynm0UcLXcl+5cnHZ8d/vJS
i3iq7trDJ3503OKq3nv8JRNNfQxS7QLoOLjmjoo6cbqicLJ4EB0fw7kn/MQH
fcMTLoTQcVdR6/b0F0x8vnpvnFI4Hb+OMW18iOfVi8W0RdDxtcbj7L3EJWuj
b+vdoWPjvUEWp4iJCxqtoqbu0bE9j8b8TnzGf3FEZhwdtzXmKj4lXv4jLkTs
AR01auu3ORJfCUr2b8mko1MDQFshE0XPzzWyf0rHXknPBe+I45zPiHfn0PFH
VNLsI+I8Y83U4Xw6FnFEpTyJcVvSKc8iOmYfOmZkQ/xJmV+N/ZLkv/rXrZ3E
3fO/lvOWkvWLW7ssJXbn0wi//paOvPyHeQWJZ8cTrETK6bhMKTZ3ooDsx27e
5VGVdFw8FebdRbzkh3P3wg90bHV+cbie+OGHz9lxH+m4VSTucAWx6iu18zKf
6eg+le1dRPzmSRykfaFj2Qf355nExvdpgmu+05GZYSeYRPwj4tiXpw10pO0c
8okmdvL/FKP6g44xn+6IhhKPuqvaF/1Hx8qJj68DiC87xazRbqVj0NSccB9i
4X0zo2XtdDwTnOdzjvjeLqfinR10NO4wCHEjVtCsCajpouPnQrWXp4lz16oY
7+2ho+qWP4InibctuytR30fHPvEqb2fiGlFu8/4BOpqc2Snyz/tm7dNah8h+
6v5Q9s+dI1WnHUbpqB9dcu/f59061m/uYdLJPT4w6gwx9/vt6VOTdJxVC8o+
Sxxcwa4YYdExMFF+2It4UZHdzXMcOo7Jv7XwJU5Nr9hHTZN4Zd+0BBKrxCnJ
+NEYePSgd0g4cUloVA8fHwPLBU0P3yM29J3KucHPQLu6RKsU4kaXwxdEBRl4
4U2JRzaxw5H3eEuYgR5m/C9eEV/aEfE1nsHAQ/Zn8n8SC22eiJUVZ+Dxjs1n
+onvKh5yeLiAgftFL5pwiXOEVjGzJcnnawuC5Ml+0OaEvdq0jIH/3TJs20Jc
PTB29cVyBvofibLbS9xR92bBO3kGimQ6tvoRu75VaNVXZOC6I77/xRJzn4c8
/LiagbSoEzwFxAvv7lNvWM9A3faK2iHilOslMwdUGHhR9oWHKNn/yt5yVW2q
DBSV89dbT2xgM2Tdq8HATaHBx92I600sZc9okfX83lZ8m9geintHtRmo/v35
lhfEF+WueXO2M1BrWeHLOaQen/ZKx9N3M7AhOeNrFvGNxKAjbXsYuFHoxedW
YifzwZXZZgz83Ka+Yz6p92UlJbkm1gz8Mel0+xJxSMShyjAHBu6RE2p0Iv3j
mN77UJujDNx9f1N0CrEue63ZOmcGKksZfPxNzHagmj+eYaDiiZdpTqQ/OavH
jgp7M/DsgpG5l0j/0vtLK/rPh4Htv3IiK/71uwfOlzIvM3BpyerbYqQfNgpt
mWsUyCD97yJ/FvHO1sZlwREM7Jnr8WD0DenPgQsM5j5i4GW3O08rSL+d2XJJ
tCmdgWUKrt8USX/+Odj57VEWed+PGLdg4kjrvMP6z0h+LjkssXhP6nutuUdQ
CQOF//6azyL9veVrxH2+7yTeiSWBN6qZ+OLalOP3BgYuVphdw/OB9M+tdmtS
fzDQrYCh70Ns/FA5X7eNgb/2XGv3qGFi8YXaD/59DNxgOy/C6xPZT+s3R5gN
MHCoN7aVIj7bkWC5YpiB9Z1FSVdqmbh69+n2snEG8p+S9Y0k59Ucnvq0yCkG
Fm9JvSdVx8RfBVtPHqEYOMNeqfCIuORk6gaVaQbWjm6T2/SF1LfMvInZWQam
p/lGvSX+HxzIK3s=
       "]]},
     Annotation[#, "Charting`Private`Tag$1461#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"E(x)\"", TraditionalForm]},
  AxesOrigin->{0, 74645.35980820157},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {74645.35980820157, 118726.99233938362`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.824298040612873*^9, 3.8242980923356953`*^9}, 
   3.82429813150121*^9, {3.8242981660616913`*^9, 3.824298176536801*^9}, {
   3.8242982083601284`*^9, 3.824298217960371*^9}, 3.8242984236998153`*^9, 
   3.8242985578291745`*^9, {3.824298715458132*^9, 3.824298758898985*^9}, 
   3.824298874988576*^9, {3.824298998806142*^9, 3.824299033715287*^9}, 
   3.8242991058350334`*^9, {3.8242991747271643`*^9, 3.8242991925181427`*^9}, {
   3.824299348459031*^9, 3.824299399161998*^9}, 3.8242998156626368`*^9, {
   3.82429995723784*^9, 3.8242999881612697`*^9}, 3.824300035986576*^9, 
   3.824402715619132*^9, 3.824403565372157*^9, 3.8244040753208895`*^9, {
   3.8244045313146753`*^9, 3.8244045424077015`*^9}, 3.8244045900345507`*^9, {
   3.8244597723337684`*^9, 3.8244597868868628`*^9}, {3.8244598239264774`*^9, 
   3.824459832286399*^9}, 3.8244607548863125`*^9, {3.824460792430791*^9, 
   3.8244608269285307`*^9}, 3.82446090332181*^9, {3.824462254317937*^9, 
   3.824462269352137*^9}, {3.824462516311385*^9, 3.8244625261889777`*^9}, 
   3.824463315464148*^9, 3.8244640968604774`*^9, {3.824481978058961*^9, 
   3.824482006748739*^9}, 3.824542876918717*^9, 3.8245429527815585`*^9, 
   3.8245429993503976`*^9, {3.8258487762734156`*^9, 3.8258488143167515`*^9}, 
   3.8258490037971177`*^9, 3.825851417543844*^9, 3.8298917945500727`*^9, 
   3.8298937386424084`*^9, 3.829897364248879*^9, 3.8298986380002775`*^9, 
   3.8299014465018444`*^9, 3.829902232051093*^9, 3.829902312694525*^9, 
   3.8299026393959618`*^9, {3.8299040788207793`*^9, 3.8299040899160604`*^9}, 
   3.8299042392094207`*^9, 3.829909517083604*^9, 3.829910624514906*^9, 
   3.8302450488641233`*^9, 3.83025149840694*^9, 3.8309713339242544`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stochastic FEM", "Subsection",
 CellChangeTimes->{{3.829891917869452*^9, 3.8298919228331165`*^9}, {
  3.8299102835312033`*^9, 3.8299102863938427`*^9}}],

Cell[CellGroupData[{

Cell["The stiffness matrix for one element", "Subsubsection",
 CellChangeTimes->{{3.829846204533836*^9, 3.8298462306628656`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aelem", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"belem", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"aelem", "/", "belem"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Nu]"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", 
   RowBox[{"3", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Nu]"}], ")"}], "/", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"3", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"3", "\[Nu]"}]}], ")"}], "/", "2"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kinput", "=", 
   RowBox[{
    RowBox[{"t", " ", "/", 
     RowBox[{"(", 
      RowBox[{"12", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Nu]", "^", "2"}]}], ")"}]}], ")"}]}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"4", "/", "r"}], "+", 
         RowBox[{"4", " ", "\[Rho]", " ", "r"}]}], ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Mu]", ",", 
        RowBox[{
         RowBox[{"4", "r"}], "+", 
         RowBox[{"4", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], "/", "r"}], "+", 
         RowBox[{"2", " ", "\[Rho]", " ", "r"}]}], ",", "\[Lambda]", ",", 
        RowBox[{
         RowBox[{"4", "/", "r"}], "+", 
         RowBox[{"4", " ", "\[Rho]", " ", "r"}]}], ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], ",", 
        RowBox[{
         RowBox[{"2", "r"}], "-", 
         RowBox[{"4", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", 
        RowBox[{"-", "\[Mu]"}], ",", 
        RowBox[{
         RowBox[{"4", "r"}], "+", 
         RowBox[{"4", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", "0", ",", "0", ",", "0", ",",
         "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "/", "r"}], "-", 
         RowBox[{"2", "\[Rho]", " ", "r"}]}], ",", 
        RowBox[{"-", "\[Mu]"}], ",", 
        RowBox[{
         RowBox[{"2", "/", "r"}], "-", 
         RowBox[{"4", "\[Rho]", " ", "r"}]}], ",", "\[Lambda]", ",", 
        RowBox[{
         RowBox[{"4", "/", "r"}], "+", 
         RowBox[{"4", "\[Rho]", " ", "r"}]}], ",", "0", ",", "0", ",", "0"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Mu]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "r"}], "-", 
         RowBox[{"2", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", 
        RowBox[{"-", "\[Lambda]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], "r"}], "+", 
         RowBox[{"2", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", "\[Mu]", ",", 
        RowBox[{
         RowBox[{"4", "r"}], "+", 
         RowBox[{"4", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "/", "r"}], "-", 
         RowBox[{"4", "\[Rho]", " ", "r"}]}], ",", 
        RowBox[{"-", "\[Lambda]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "/", "r"}], "-", 
         RowBox[{"2", " ", "\[Rho]", " ", "r"}]}], ",", "\[Mu]", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], "/", "r"}], "+", 
         RowBox[{"2", " ", "\[Rho]", " ", "r"}]}], ",", "\[Lambda]", ",", 
        RowBox[{
         RowBox[{"4", "/", "r"}], "+", 
         RowBox[{"4", " ", "\[Rho]", " ", "r"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], "r"}], "+", 
         RowBox[{"2", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", "\[Mu]", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "r"}], "-", 
         RowBox[{"2", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", 
        RowBox[{"-", "\[Lambda]"}], ",", 
        RowBox[{
         RowBox[{"2", "r"}], "-", 
         RowBox[{"4", 
          RowBox[{"\[Rho]", "/", "r"}]}]}], ",", 
        RowBox[{"-", "\[Mu]"}], ",", 
        RowBox[{
         RowBox[{"4", "r"}], "+", 
         RowBox[{"4", 
          RowBox[{"\[Rho]", "/", "r"}]}]}]}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", 
    RowBox[{"kinput", "+", 
     RowBox[{"Transpose", "[", "kinput", "]"}], "-", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"kinput", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"klocal", "[", "x_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EY", "=", 
     RowBox[{"f", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     RowBox[{"EY", " ", "k"}], "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.826900573235505*^9, 3.8269007615533533`*^9}, {
   3.828176191423939*^9, 3.828176193948312*^9}, {3.829892316315915*^9, 
   3.8298923506036453`*^9}, {3.829892409351165*^9, 3.829892420822793*^9}, {
   3.8298924624134765`*^9, 3.8298924676182117`*^9}, {3.829892505770619*^9, 
   3.829892570073891*^9}, {3.829892653635298*^9, 3.8298926587122307`*^9}, 
   3.82989358179149*^9, {3.829894187670952*^9, 3.8298941884127645`*^9}, {
   3.8298985772907443`*^9, 3.829898586715392*^9}, 3.829901829161933*^9, {
   3.829901871379121*^9, 3.829901871801594*^9}, {3.829901951023632*^9, 
   3.8299019515391393`*^9}, {3.829908748284272*^9, 3.8299087704628215`*^9}, 
   3.8299088569556227`*^9, {3.829909004300997*^9, 3.829909090021099*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assembling the global stiffness matrix", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.829850059048884*^9, 3.8298500619116325`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"40", "+", "1"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"10", "+", "1"}], ")"}], " ", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"global", "[", 
   RowBox[{"i_", ",", "j_", ",", "m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", "41"}], "]"}], " ", "2", "aelem"}], "-", 
      "aelem"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"kglobal", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "i"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "j"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "m"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"7", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "i"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{"2", " ", "i"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "j"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "3"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{"2", " ", "j"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "m"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "5"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{"2", " ", "m"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "6"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{
         RowBox[{"2", " ", "n"}], "-", "1"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "7"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"kglobal", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", " ", "n"}], ",", 
        RowBox[{"2", " ", "n"}]}], "]"}], "]"}], "+=", 
     RowBox[{
      RowBox[{"klocal", "[", "x", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"8", ",", "8"}], "]"}], "]"}]}], ";", "\n", 
    RowBox[{"Return", "[", "kglobal", "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.8298928508057103`*^9, 3.829892879320673*^9}, {
   3.8298932436724186`*^9, 3.829893271584196*^9}, {3.829901281246804*^9, 
   3.8299012857614164`*^9}, {3.829901643340931*^9, 3.829901654963848*^9}, {
   3.8299017337000127`*^9, 3.829901772448473*^9}, 3.8299018534368563`*^9, {
   3.8299019462278814`*^9, 3.829902005631337*^9}, {3.8299024422306533`*^9, 
   3.8299024525410557`*^9}, {3.829903211919201*^9, 3.8299032123516626`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The global stiffness matrix", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298500768678064`*^9, 3.829850077789403*^9}}],

Cell[BoxData[
 RowBox[{"Kglobal", ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Kglobal", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"index", " ", "=", "0"}], ",", 
      RowBox[{"index", "\[LessEqual]", "408"}], ",", 
      RowBox[{"index", "+=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"1", "+", "index"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", 
        RowBox[{"2", "+", "index"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"m", "=", 
        RowBox[{"43", "+", "index"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"42", "+", "index"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Divisible", "[", 
           RowBox[{"i", ",", "41"}], "]"}], "\[Equal]", "False"}], ",", " ", 
         RowBox[{"Kglobal", "+=", 
          RowBox[{"global", "[", 
           RowBox[{"i", ",", "j", ",", "m", ",", "n"}], "]"}]}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "Kglobal", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8298482371769733`*^9, 3.8298482502096295`*^9}, {
   3.8298486361407175`*^9, 3.829848740968859*^9}, {3.8298487935786853`*^9, 
   3.8298487943973293`*^9}, {3.8298489582378626`*^9, 3.829849026967063*^9}, {
   3.8298491000035925`*^9, 3.8298491400865455`*^9}, {3.82984926265534*^9, 
   3.8298492769958863`*^9}, {3.8298493089618435`*^9, 3.829849343228134*^9}, {
   3.829849392399076*^9, 3.82984944926834*^9}, {3.829849619222685*^9, 
   3.829849619434091*^9}, {3.829849668177602*^9, 3.829849678677905*^9}, {
   3.8298498759690666`*^9, 3.8298499137632737`*^9}, {3.8298933264778814`*^9, 
   3.829893414001816*^9}, {3.829893604743774*^9, 3.8298936558049383`*^9}, 
   3.8298939563368034`*^9, {3.8298962820137854`*^9, 3.829896307715127*^9}, {
   3.829902469084092*^9, 3.829902471103539*^9}, {3.829903139082328*^9, 
   3.8299031530775166`*^9}, {3.829903220261422*^9, 3.829903220376114*^9}, {
   3.829903390993656*^9, 3.829903396415859*^9}, {3.8299093131960726`*^9, 
   3.8299093142999372`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Boundary conditions", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fix", "[", "x_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "dim"}], ",", 
      RowBox[{"i", "+=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"KGLOBAL", "[", 
         RowBox[{"[", 
          RowBox[{"x", ",", "i"}], "]"}], "]"}], "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"KGLOBAL", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "x"}], "]"}], "]"}], "=", "0"}], ";"}]}], "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KGLOBAL", "[", 
      RowBox[{"[", 
       RowBox[{"x", ",", "x"}], "]"}], "]"}], "=", 
     RowBox[{"10", "^", "10"}]}], ";"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8298503026103106`*^9, 3.8298504226766863`*^9}, {
  3.8298504810648355`*^9, 3.8298504871555076`*^9}, {3.8298508499942303`*^9, 
  3.829850852634198*^9}, {3.829894013143371*^9, 3.8298940251920156`*^9}, {
  3.8298962386604347`*^9, 3.829896246104348*^9}, {3.8299043310888944`*^9, 
  3.829904333504062*^9}, {3.8299094168807974`*^9, 3.8299094258991613`*^9}, {
  3.829909540498995*^9, 3.829909542817363*^9}}],

Cell[BoxData[
 RowBox[{"fixall", ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", 
      RowBox[{"x", "\[LessEqual]", "821"}], ",", 
      RowBox[{"x", "+=", "82"}], ",", "\[IndentingNewLine]", 
      RowBox[{"fix", "[", "x", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"x", "=", "2"}], ",", 
      RowBox[{"x", "\[LessEqual]", "822"}], ",", 
      RowBox[{"x", "+=", "82"}], ",", "\[IndentingNewLine]", 
      RowBox[{"fix", "[", "x", "]"}]}], "]"}], ";"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.829850505034465*^9, 3.8298505308650165`*^9}, {
   3.8298506324903116`*^9, 3.829850667275298*^9}, {3.829850726331942*^9, 
   3.8298507786297064`*^9}, 3.8298508645031595`*^9, {3.82989406654331*^9, 
   3.829894089840127*^9}, {3.829895502625824*^9, 3.8298955049856377`*^9}, {
   3.8298962290785933`*^9, 3.829896262505223*^9}, {3.8298965076710453`*^9, 
   3.8298965147779713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["External forces", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829850892000868*^9, 
  3.8298509172983484`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "dim"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"10", ",", "2"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"[", "dim", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"P", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.82985092314392*^9, 3.8298509232844877`*^9}, {
  3.8298509626931467`*^9, 3.8298509673006315`*^9}, {3.8298941962080903`*^9, 
  3.8298942027354383`*^9}, {3.8298942937870183`*^9, 3.8298942968056493`*^9}, {
  3.829894439208992*^9, 3.8298944536806183`*^9}, {3.829898970963132*^9, 
  3.829898977441561*^9}, {3.8298990079276395`*^9, 3.8298990086619415`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve the system", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "R_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "=", " ", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"10", ",", "2"}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"[", "dim", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{"P", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", "x_", "]"}], ":=", 
      RowBox[{"Realization", "[", 
       RowBox[{"R", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"KGLOBAL", "=", "Kglobal"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "fixall", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{
       RowBox[{"Inverse", "[", "KGLOBAL", "]"}], ".", "F"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "sol", "]"}], ";"}], ")"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUl3ReytjjeOO0yOxIFoT2mVHBCdMPF/EYhmca/v
uQOkt8nMmASiax6FzPwIpJe8nTkLRFv9XbgIRJuc37EcRJ+x8twBooMelO8C
0YcM+s+A6B0+AWdBtMZhhYtgvuXLSyD6FZNu5CcgfWJZcTSI9j59sB9Ex9zU
mwSiT+7+NRdEBzlwzgPRrAcmP/wMpPPfrAbTKwvMrn4B0gZ/XoLp6tfR+78C
aea6l2B6+vHcByD62y7F5yDa5HdP+TcgzfF0YQWI9sqXefUD5B72KDD9ZcnT
jyB6fVDnFxA9qY7rJ4ie5/ILTAMAXBy7nQ==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histogram of response u", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}, {3.829909808940049*^9, 3.829909815383072*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculationTime", "=", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"U", "[", "real", "]"}], "[", 
           RowBox[{"[", "82", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"real", ",", "1", ",", "5000"}], "}"}]}], "]"}]}], ";"}], 
     "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8299096241786056`*^9, 3.8299096727721615`*^9}, {
   3.829909731564189*^9, 3.8299097502408223`*^9}, {3.829909842035471*^9, 
   3.8299099314842663`*^9}, 3.8299118657907963`*^9, {3.830245086705965*^9, 
   3.830245089765603*^9}, {3.8302452032527995`*^9, 3.8302452275882406`*^9}, {
   3.8302452595456457`*^9, 3.8302452962355337`*^9}, {3.830245387994315*^9, 
   3.8302453892759004`*^9}}],

Cell[BoxData["686.`"], "Output",
 CellChangeTimes->{
  3.830245240701065*^9, 3.830245277653718*^9, {3.8302453203234158`*^9, 
   3.830245340390939*^9}, 3.830246113835083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<response_data.txt\>\"", ",", "u", ",", "\"\<CSV\>\""}], 
  "]"}]], "Input"],

Cell[BoxData["\<\"response_data.txt\"\>"], "Output",
 CellChangeTimes->{3.830246524982706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"u", ",", 
   RowBox[{"{", "0.01", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<u\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8299099383469296`*^9, 3.829909946367428*^9}, {
  3.8299107607257433`*^9, 3.8299107627572465`*^9}, {3.8299127455001917`*^9, 
  3.8299127700244274`*^9}, {3.829912845128981*^9, 3.829912845598488*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.574], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.574], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.02, 0}, {0.03, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.975780624499606`, 46.93134507606086}, {
          96.93467498741578, 97.64526832252467}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.03, 0}, {0.04, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{46.43134507606086, 66.38690952762212}, {
          96.09230164698018, 97.64526832252467}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.04, 0}, {0.05, 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{65.88690952762212, 85.84247397918338}, {
          95.24992830654458, 97.64526832252467}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.05, 0}, {0.06, 43}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{85.34247397918338, 105.29803843074461`}, {
          88.08975491284203, 97.64526832252467}}],
        StatusArea[#, 43]& ,
        TagBoxNote->"43"],
       StyleBox["43", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.06, 0}, {0.07, 112}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{104.79803843074461`, 124.75360288230587`}, {
          73.558814790328, 97.64526832252467}}],
        StatusArea[#, 112]& ,
        TagBoxNote->"112"],
       StyleBox["112", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[112, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.07, 0}, {0.08, 246}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{124.25360288230587`, 144.20916733386713`}, {
          45.339307885735565`, 97.64526832252467}}],
        StatusArea[#, 246]& ,
        TagBoxNote->"246"],
       StyleBox["246", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[246, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.08, 0}, {0.09000000000000001, 464}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{143.70916733386713`, 
          163.6647317854284}, {-0.5700391680043708, 97.64526832252467}}],
        StatusArea[#, 464]& ,
        TagBoxNote->"464"],
       StyleBox["464", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[464, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.09000000000000001, 0}, {0.1, 720}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{163.1647317854284, 
          183.12029623698965`}, {-54.48193295588247, 97.64526832252467}}],
        StatusArea[#, 720]& ,
        TagBoxNote->"720"],
       StyleBox["720", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[720, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.1, 0}, {0.11, 857}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{182.62029623698965`, 
          202.57586068855088`}, {-83.33321986580161, 97.64526832252467}}],
        StatusArea[#, 857]& ,
        TagBoxNote->"857"],
       StyleBox["857", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[857, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.11, 0}, {0.12000000000000001`, 885}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{202.07586068855088`, 
          222.03142514011216`}, {-89.22983324885077, 97.64526832252467}}],
        StatusArea[#, 885]& ,
        TagBoxNote->"885"],
       StyleBox["885", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[885, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.12000000000000001`, 0}, {0.13, 716}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{221.53142514011216`, 
          241.4869895916734}, {-53.639559615446856`, 97.64526832252467}}],
        StatusArea[#, 716]& ,
        TagBoxNote->"716"],
       StyleBox["716", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[716, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.13, 0}, {0.13999999999999999`, 488}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{240.9869895916734, 
          260.9425540432346}, {-5.624279210617942, 97.64526832252467}}],
        StatusArea[#, 488]& ,
        TagBoxNote->"488"],
       StyleBox["488", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[488, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.13999999999999999`, 0}, {0.15, 275}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{260.4425540432346, 280.39811849479594`}, {
          39.232101167577504`, 97.64526832252467}}],
        StatusArea[#, 275]& ,
        TagBoxNote->"275"],
       StyleBox["275", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[275, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.15, 0}, {0.16, 126}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{279.89811849479594`, 299.8536829463572}, {
          70.61050809880342, 97.64526832252467}}],
        StatusArea[#, 126]& ,
        TagBoxNote->"126"],
       StyleBox["126", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[126, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.16, 0}, {0.16999999999999998`, 43}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{299.3536829463572, 319.3092473979184}, {
          88.08975491284203, 97.64526832252467}}],
        StatusArea[#, 43]& ,
        TagBoxNote->"43"],
       StyleBox["43", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.16999999999999998`, 0}, {0.18, 10}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.8092473979184, 338.76481184947966`}, {
          95.03933497143568, 97.64526832252467}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"u\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0.0168, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.02, 0.18}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8299100225466127`*^9, {3.829910737682052*^9, 3.8299107635329695`*^9}, 
   3.829912711206292*^9, {3.829912748999495*^9, 3.829912770663746*^9}, 
   3.8299128459710183`*^9, 3.8299130484827876`*^9, 3.8302451427939143`*^9, {
   3.830245214188735*^9, 3.8302452439618435`*^9}, {3.8302453221042943`*^9, 
   3.8302453421602087`*^9}, 3.8302462845783625`*^9, {3.830971538500535*^9, 
   3.8309715447190175`*^9}, {3.830971611862872*^9, 3.8309716214165277`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Empirical pdf", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}, {3.829909808940049*^9, 3.829909815383072*^9}, {
  3.829910171478684*^9, 3.829910186862052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"u", ",", 
   RowBox[{"{", "0.005", "}"}], ",", "\"\<PDF\>\"", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<u\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8299100424240975`*^9, 3.8299100835490465`*^9}, {
  3.8299105781411643`*^9, 3.829910603540176*^9}, {3.8299127796347675`*^9, 
  3.8299128347508783`*^9}, {3.8299128815788245`*^9, 3.8299128816855364`*^9}, {
  3.830245173350568*^9, 3.8302451736315885`*^9}, {3.830245398805013*^9, 
  3.830245398914197*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.46199999999999997`], Thickness[Small]}], 
     RectangleBox[{0.02, 0}, {0.025, 0.039999999999999994},
      RoundingRadius->0], RectangleBox[{0.03, 0}, {0.035, 0.07999999999999993},
      RoundingRadius->0], RectangleBox[{0.035, 0}, {0.04, 0.12000000000000008},
      RoundingRadius->0], RectangleBox[{0.04, 0}, {0.045, 0.12000000000000008},
      RoundingRadius->0], RectangleBox[{0.045, 0}, {0.05, 0.23999999999999982},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.05500000000000001, 0.5599999999999996},
      RoundingRadius->0], RectangleBox[{0.05500000000000001, 0}, {0.06, 1.1600000000000021},
      RoundingRadius->0], RectangleBox[{0.06, 0}, {0.065, 1.6799999999999986},
      RoundingRadius->0], RectangleBox[{0.065, 0}, {0.07, 2.7999999999999976},
      RoundingRadius->0], RectangleBox[{0.07, 0}, {0.075, 3.9600000000000075},
      RoundingRadius->0], RectangleBox[{0.075, 0}, {0.08, 5.8799999999999955},
      RoundingRadius->0], RectangleBox[{0.08, 0}, {0.085, 8.559999999999993},
      RoundingRadius->0], RectangleBox[{0.085, 0}, {0.09000000000000001, 9.999999999999991},
      RoundingRadius->0], RectangleBox[{0.09000000000000001, 0}, {0.095, 12.840000000000025},
      RoundingRadius->0], RectangleBox[{0.095, 0}, {0.1, 15.959999999999987},
      RoundingRadius->0], RectangleBox[{0.1, 0}, {0.10500000000000001, 16.799999999999986},
      RoundingRadius->0], RectangleBox[{0.10500000000000001, 0}, {0.11, 17.480000000000032},
      RoundingRadius->0], RectangleBox[{0.11, 0}, {0.115, 18.199999999999985},
      RoundingRadius->0], RectangleBox[{0.115, 0}, {0.12000000000000001, 17.199999999999985},
      RoundingRadius->0], RectangleBox[{0.12000000000000001, 0}, {0.125, 14.920000000000027},
      RoundingRadius->0], RectangleBox[{0.125, 0}, {0.13, 13.719999999999988},
      RoundingRadius->0], RectangleBox[{0.13, 0}, {0.135, 11.15999999999999},
      RoundingRadius->0], RectangleBox[{0.135, 0}, {0.13999999999999999, 8.36000000000004},
      RoundingRadius->0], RectangleBox[{0.13999999999999999, 0}, {0.145, 6.279999999999995},
      RoundingRadius->0], RectangleBox[{0.145, 0}, {0.15, 4.719999999999996},
      RoundingRadius->0], RectangleBox[{0.15, 0}, {0.155, 3.039999999999998},
      RoundingRadius->0], RectangleBox[{0.155, 0}, {0.16, 1.9999999999999982},
      RoundingRadius->0], RectangleBox[{0.16, 0}, {0.16499999999999998, 1.2000000000000057},
      RoundingRadius->0], RectangleBox[{0.16499999999999998, 0}, {0.16999999999999998, 0.5199999999999996},
      RoundingRadius->0], RectangleBox[{0.16999999999999998, 0}, {0.175, 0.23999999999999982},
      RoundingRadius->0], RectangleBox[{0.175, 0}, {0.18, 0.15999999999999986},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"u\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0.0168, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.02, 0.18}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8299100779298773`*^9, 3.8299100870701694`*^9}, 
   3.8299106072287083`*^9, 3.829910737791073*^9, {3.8299127763700533`*^9, 
   3.8299128350625105`*^9}, 3.8299128821030445`*^9, 3.8302451429377103`*^9, 
   3.830245177140334*^9, 3.8302452163761873`*^9, {3.8302453262917075`*^9, 
   3.8302453450189037`*^9}, 3.830246293371315*^9, 3.8309716286686563`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Principal Component Analysis", "Subsection",
 CellChangeTimes->{{3.829891917869452*^9, 3.8298919228331165`*^9}, {
  3.8299102835312033`*^9, 3.8299102863938427`*^9}, {3.830243890371792*^9, 
  3.830243912989983*^9}}],

Cell[CellGroupData[{

Cell["Principal Components", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}, {3.8302527198547564`*^9, 3.830252725486908*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"V", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"U", "[", "real", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"real", ",", "1", ",", "100"}], "}"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.830246556132086*^9, 3.8302466568173466`*^9}, 
   3.8302515071242957`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "V", "]"}]], "Input",
 CellChangeTimes->{3.8302467673351965`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "902"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8302467689601817`*^9, {3.830251518076189*^9, 3.830251526906016*^9}, 
   3.8302515815715265`*^9, 3.8309719137671356`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "V", "]"}], ".", "V"}], "]"}]], "Input",
 CellChangeTimes->{{3.8302466605767565`*^9, 3.8302466634577107`*^9}, {
  3.8302467154837184`*^9, 3.830246718657897*^9}, {3.8302467490846586`*^9, 
  3.830246751477289*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"902", ",", "902"}], "}"}]], "Output",
 CellChangeTimes->{
  3.83024666394715*^9, 3.8302467191112604`*^9, 3.8302467518677917`*^9, {
   3.8302515218458977`*^9, 3.8302515299730577`*^9}, 3.8302515846119394`*^9, 
   3.830971913798376*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "V", "]"}], ".", "V"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8302466834637814`*^9, 3.8302467110419464`*^9}, {
   3.830248423394123*^9, 3.8302484483977966`*^9}, {3.8302485392140775`*^9, 
   3.8302485425323935`*^9}, 3.83024924389564*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"l", "=", "1"}], ",", 
    RowBox[{"l", "\[LessEqual]", "dim"}], ",", 
    RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"vals", "[", 
        RowBox[{"[", "l", "]"}], "]"}], ">", 
       RowBox[{"10", "^", 
        RowBox[{"-", "15"}]}]}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"\[CapitalPhi]", ",", 
        RowBox[{"vecs", "[", 
         RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPhi]", "=", 
   RowBox[{"Transpose", "[", "\[CapitalPhi]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8302486681295924`*^9, 3.8302487547114143`*^9}, {
  3.830248909745431*^9, 3.8302489655772877`*^9}, {3.8302490442030296`*^9, 
  3.8302490562355165`*^9}, {3.830249096012751*^9, 3.8302490987971916`*^9}, {
  3.8302491531410007`*^9, 3.8302492381821923`*^9}, {3.8302493488951716`*^9, 
  3.830249385655242*^9}, {3.830249849382845*^9, 3.8302498730391665`*^9}, {
  3.83025046704103*^9, 3.830250489513925*^9}, {3.8302505441606417`*^9, 
  3.830250549102169*^9}, {3.8302507078916435`*^9, 3.8302507345169296`*^9}, {
  3.830251602993791*^9, 3.8302516076621943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "KGLOBAL", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "F", "]"}]}], "Input",
 CellChangeTimes->{{3.8302495463751955`*^9, 3.8302495810342617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"902", ",", "902"}], "}"}]], "Output",
 CellChangeTimes->{3.8302495513224387`*^9, 3.8302495815189004`*^9, 
  3.8302498589723773`*^9, 3.8302516150680285`*^9, 3.8309719139233465`*^9}],

Cell[BoxData[
 RowBox[{"{", "902", "}"}]], "Output",
 CellChangeTimes->{3.8302495513224387`*^9, 3.8302495815189004`*^9, 
  3.8302498589723773`*^9, 3.8302516150680285`*^9, 3.830971913938967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "\[CapitalPhi]", "]"}], ".", "KGLOBAL", ".", 
   "\[CapitalPhi]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "\[CapitalPhi]", "]"}], ".", "F"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.830249500062519*^9, 3.830249543215783*^9}, {
  3.830249583265736*^9, 3.8302495867256017`*^9}, {3.8302502557753057`*^9, 
  3.830250256916723*^9}, {3.830250559671515*^9, 3.830250564236308*^9}, {
  3.8302507444205236`*^9, 3.8302507625813303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{
  3.830250257447791*^9, 3.8302505668780775`*^9, {3.8302507543132067`*^9, 
   3.8302507631904764`*^9}, {3.8302515983279347`*^9, 3.8302516095945272`*^9}, 
   3.83097191395459*^9}],

Cell[BoxData[
 RowBox[{"{", "15", "}"}]], "Output",
 CellChangeTimes->{
  3.830250257447791*^9, 3.8302505668780775`*^9, {3.8302507543132067`*^9, 
   3.8302507631904764`*^9}, {3.8302515983279347`*^9, 3.8302516095945272`*^9}, 
   3.83097191395459*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve the system", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Upca", "[", "R_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"F", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "dim"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "=", " ", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"10", ",", "2"}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"[", "dim", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{"P", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", "x_", "]"}], ":=", 
      RowBox[{"Realization", "[", 
       RowBox[{"R", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"KGLOBAL", "=", "Kglobal"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "fixall", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Kred", " ", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", "\[CapitalPhi]", "]"}], ".", "KGLOBAL", ".", 
       "\[CapitalPhi]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fred", " ", "=", " ", 
      RowBox[{
       RowBox[{"Transpose", "[", "\[CapitalPhi]", "]"}], ".", "F"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{
       RowBox[{"Inverse", "[", "Kred", "]"}], ".", "Fred"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"\[CapitalPhi]", ".", "sol"}], "]"}], ";"}], ")"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQfUl3ReytjjeOO0yOxIFoT2mVHBCdMPF/EYhmca/v
uQOkt8nMmASiax6FzPwIpJe8nTkLRFv9XbgIRJuc37EcRJ+x8twBooMelO8C
0YcM+s+A6B0+AWdBtMZhhYtgvuXLSyD6FZNu5CcgfWJZcTSI9j59sB9Ex9zU
mwSiT+7+NRdEBzlwzgPRrAcmP/wMpPPfrAbTKwvMrn4B0gZ/XoLp6tfR+78C
aea6l2B6+vHcByD62y7F5yDa5HdP+TcgzfF0YQWI9sqXefUD5B72KDD9ZcnT
jyB6fVDnFxA9qY7rJ4ie5/ILTO9JvS86v/ON47/6aCkQvbaPUR5ES4jwgOkz
+ZOiQfRKgdx4ED3FpzYTRAdsScoF0TYv7btA9J31v7pBtKcC4xIQ/cF41XIQ
DQDjjO0e
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histogram of response u", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}, {3.829909808940049*^9, 3.829909815383072*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculationTime", "=", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{"upca", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"Upca", "[", "real", "]"}], "[", 
           RowBox[{"[", "82", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"real", ",", "1", ",", "5000"}], "}"}]}], "]"}]}], ";"}], 
     "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8299096241786056`*^9, 3.8299096727721615`*^9}, {
   3.829909731564189*^9, 3.8299097502408223`*^9}, {3.829909842035471*^9, 
   3.8299099314842663`*^9}, 3.8299118657907963`*^9, {3.830245086705965*^9, 
   3.830245089765603*^9}, {3.8302452032527995`*^9, 3.8302452275882406`*^9}, {
   3.8302452595456457`*^9, 3.8302452962355337`*^9}, {3.830245387994315*^9, 
   3.8302453892759004`*^9}, {3.830249735995746*^9, 3.830249763659426*^9}, {
   3.830249885069105*^9, 3.830249899278761*^9}, {3.83025038690593*^9, 
   3.830250425548666*^9}, 3.8302506025135365`*^9, {3.830250816352597*^9, 
   3.8302508291140223`*^9}, {3.8302508702956457`*^9, 3.830250870623692*^9}, {
   3.830251627247827*^9, 3.830251654249626*^9}, {3.8302516851196995`*^9, 
   3.8302516871342387`*^9}, {3.830971872704181*^9, 3.8309718733914957`*^9}}],

Cell[BoxData["331.359375`"], "Output",
 CellChangeTimes->{
  3.830245240701065*^9, 3.830245277653718*^9, {3.8302453203234158`*^9, 
   3.830245340390939*^9}, 3.830246113835083*^9, {3.830249749434043*^9, 
   3.830249757769409*^9}, 3.830249833178934*^9, {3.8302498860057683`*^9, 
   3.830249893543573*^9}, 3.8302501154122896`*^9, {3.8302503919404755`*^9, 
   3.8302504188997355`*^9}, 3.8302504701573997`*^9, 3.8302507150970116`*^9, {
   3.830250822278008*^9, 3.8302508384501047`*^9}, 3.830251116887518*^9, 
   3.8302516348462453`*^9, 3.830252024944871*^9, 3.8309722551030293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"upca", ",", 
   RowBox[{"{", "0.01", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<u\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8299099383469296`*^9, 3.829909946367428*^9}, {
  3.8299107607257433`*^9, 3.8299107627572465`*^9}, {3.8299127455001917`*^9, 
  3.8299127700244274`*^9}, {3.829912845128981*^9, 3.829912845598488*^9}, {
  3.8302501756283293`*^9, 3.830250175857345*^9}, {3.8302503961777573`*^9, 
  3.830250396663*^9}, {3.830252116104474*^9, 3.830252132220013*^9}, {
  3.8309718763283267`*^9, 3.8309718767963257`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.04, 0}, {0.05, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.975780624499606`, 43.040232185748614`}, {
          96.39274435924858, 97.64526832252466}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.05, 0}, {0.06, 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{42.540232185748614`, 58.6046837469976}, {
          95.6402203959725, 97.64526832252466}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.06, 0}, {0.07, 20}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{58.1046837469976, 74.16913530824661}, {
          92.12844190068414, 97.64526832252466}}],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.07, 0}, {0.08, 50}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{73.66913530824661, 89.73358686949561}, {
          84.60320226792335, 97.64526832252466}}],
        StatusArea[#, 50]& ,
        TagBoxNote->"50"],
       StyleBox["50", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[50, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.08, 0}, {0.09, 105}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{89.23358686949561, 105.29803843074461`}, {
          70.80692960786192, 97.64526832252466}}],
        StatusArea[#, 105]& ,
        TagBoxNote->"105"],
       StyleBox["105", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[105, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.09, 0}, {0.1, 223}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{104.79803843074461`, 120.86248999199364`}, {
          41.20765371900282, 97.64526832252466}}],
        StatusArea[#, 223]& ,
        TagBoxNote->"223"],
       StyleBox["223", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[223, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.1, 0}, {0.11000000000000001`, 364}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{120.36248999199364`, 136.42694155324264`}, {
          5.839027445027128, 97.64526832252466}}],
        StatusArea[#, 364]& ,
        TagBoxNote->"364"],
       StyleBox["364", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[364, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.11000000000000001`, 0}, {0.12, 494}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{135.92694155324264`, 
          151.99139311449161`}, {-26.770344296936273`, 97.64526832252466}}],
        StatusArea[#, 494]& ,
        TagBoxNote->"494"],
       StyleBox["494", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[494, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.12, 0}, {0.13, 656}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{151.49139311449161`, 
          167.55584467574064`}, {-67.4066383138445, 97.64526832252466}}],
        StatusArea[#, 656]& ,
        TagBoxNote->"656"],
       StyleBox["656", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[656, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.13, 0}, {0.14, 743}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{167.05584467574064`, 
          183.12029623698965`}, {-89.22983324885078, 97.64526832252466}}],
        StatusArea[#, 743]& ,
        TagBoxNote->"743"],
       StyleBox["743", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[743, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.14, 0}, {0.15, 700}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{182.62029623698965`, 
          198.68474779823862`}, {-78.44365644189367, 97.64526832252466}}],
        StatusArea[#, 700]& ,
        TagBoxNote->"700"],
       StyleBox["700", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[700, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.15, 0}, {0.16, 561}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{198.18474779823862`, 
          214.24919935948765`}, {-43.57671281010204, 97.64526832252466}}],
        StatusArea[#, 561]& ,
        TagBoxNote->"561"],
       StyleBox["561", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[561, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.16, 0}, {0.17, 453}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{213.74919935948765`, 
          229.81365092073665`}, {-16.485850132163193`, 97.64526832252466}}],
        StatusArea[#, 453]& ,
        TagBoxNote->"453"],
       StyleBox["453", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[453, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.17, 0}, {0.18000000000000002`, 300}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{229.31365092073665`, 245.37810248198568`}, {
          21.892871994916803`, 97.64526832252466}}],
        StatusArea[#, 300]& ,
        TagBoxNote->"300"],
       StyleBox["300", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[300, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.18000000000000002`, 0}, {0.19, 165}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{244.87810248198568`, 260.9425540432346}, {
          55.75645034234034, 97.64526832252466}}],
        StatusArea[#, 165]& ,
        TagBoxNote->"165"],
       StyleBox["165", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[165, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.19, 0}, {0.2, 92}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{260.4425540432346, 276.50700560448365`}, {
          74.06786678205825, 97.64526832252466}}],
        StatusArea[#, 92]& ,
        TagBoxNote->"92"],
       StyleBox["92", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[92, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.2, 0}, {0.21000000000000002`, 47}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{276.00700560448365`, 292.0714571657326}, {
          85.35572623119943, 97.64526832252466}}],
        StatusArea[#, 47]& ,
        TagBoxNote->"47"],
       StyleBox["47", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[47, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.21000000000000002`, 0}, {0.22, 12}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{291.5714571657326, 307.6359087269816}, {
          94.13517246942034, 97.64526832252466}}],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.22, 0}, {0.23, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{307.1359087269816, 323.2003602882306}, {
          95.89106171706453, 97.64526832252466}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.23, 0}, {0.24, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{322.7003602882306, 338.7648118494796}, {
          96.89442700143263, 97.64526832252466}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"u\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0.036000000000000004`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.04, 0.24}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8299100225466127`*^9, {3.829910737682052*^9, 3.8299107635329695`*^9}, 
   3.829912711206292*^9, {3.829912748999495*^9, 3.829912770663746*^9}, 
   3.8299128459710183`*^9, 3.8299130484827876`*^9, 3.8302451427939143`*^9, {
   3.830245214188735*^9, 3.8302452439618435`*^9}, {3.8302453221042943`*^9, 
   3.8302453421602087`*^9}, 3.8302462845783625`*^9, {3.8302501698835373`*^9, 
   3.830250176417838*^9}, {3.8302504006198835`*^9, 3.8302504212201033`*^9}, 
   3.8302504977221327`*^9, {3.830250826062954*^9, 3.830250838543772*^9}, 
   3.8302511455373993`*^9, 3.83025167703342*^9, 3.830252025069805*^9, {
   3.8302521120891924`*^9, 3.830252132750444*^9}, 3.830972255274865*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Empirical pdf", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}, {3.829909808940049*^9, 3.829909815383072*^9}, {
  3.829910171478684*^9, 3.829910186862052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"upca", ",", 
   RowBox[{"{", "0.005", "}"}], ",", "\"\<PDF\>\"", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<u\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8299100424240975`*^9, 3.8299100835490465`*^9}, {
  3.8299105781411643`*^9, 3.829910603540176*^9}, {3.8299127796347675`*^9, 
  3.8299128347508783`*^9}, {3.8299128815788245`*^9, 3.8299128816855364`*^9}, {
  3.830245173350568*^9, 3.8302451736315885`*^9}, {3.830245398805013*^9, 
  3.830245398914197*^9}, {3.8309718829608736`*^9, 3.8309718832482247`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{0.04, 0}, {0.045, 0.04000000000000002},
      RoundingRadius->0], RectangleBox[{0.045, 0}, {0.05, 0.07999999999999993},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.055, 0.1600000000000001},
      RoundingRadius->0], RectangleBox[{0.055, 0}, {0.06, 0.08000000000000004},
      RoundingRadius->0], RectangleBox[{0.06, 0}, {0.065, 0.3599999999999997},
      RoundingRadius->0], RectangleBox[{0.065, 0}, {0.07, 0.43999999999999967},
      RoundingRadius->0], RectangleBox[{0.07, 0}, {0.07500000000000001, 0.5999999999999995},
      RoundingRadius->0], RectangleBox[{0.07500000000000001, 0}, {0.08, 1.4000000000000026},
      RoundingRadius->0], RectangleBox[{0.08, 0}, {0.08499999999999999, 1.2000000000000022},
      RoundingRadius->0], RectangleBox[{0.08499999999999999, 0}, {0.09, 2.999999999999998},
      RoundingRadius->0], RectangleBox[{0.09, 0}, {0.095, 4.0399999999999965},
      RoundingRadius->0], RectangleBox[{0.095, 0}, {0.1, 4.8799999999999955},
      RoundingRadius->0], RectangleBox[{0.1, 0}, {0.10500000000000001, 6.199999999999995},
      RoundingRadius->0], RectangleBox[{0.10500000000000001, 0}, {0.11000000000000001, 8.359999999999992},
      RoundingRadius->0], RectangleBox[{0.11000000000000001, 0}, {0.11499999999999999, 9.200000000000044},
      RoundingRadius->0], RectangleBox[{0.11499999999999999, 0}, {0.12, 10.559999999999992},
      RoundingRadius->0], RectangleBox[{0.12, 0}, {0.125, 12.91999999999999},
      RoundingRadius->0], RectangleBox[{0.125, 0}, {0.13, 13.31999999999999},
      RoundingRadius->0], RectangleBox[{0.13, 0}, {0.135, 15.359999999999989},
      RoundingRadius->0], RectangleBox[{0.135, 0}, {0.14, 14.359999999999989},
      RoundingRadius->0], RectangleBox[{0.14, 0}, {0.145, 14.320000000000068},
      RoundingRadius->0], RectangleBox[{0.145, 0}, {0.15, 13.679999999999989},
      RoundingRadius->0], RectangleBox[{0.15, 0}, {0.155, 11.35999999999999},
      RoundingRadius->0], RectangleBox[{0.155, 0}, {0.16, 11.079999999999991},
      RoundingRadius->0], RectangleBox[{0.16, 0}, {0.165, 9.879999999999992},
      RoundingRadius->0], RectangleBox[{0.165, 0}, {0.17, 8.239999999999993},
      RoundingRadius->0], RectangleBox[{0.17, 0}, {0.17500000000000002, 7.159999999999995},
      RoundingRadius->0], RectangleBox[{0.17500000000000002, 0}, {0.18000000000000002, 4.839999999999996},
      RoundingRadius->0], RectangleBox[{0.18000000000000002, 0}, {0.185, 3.4400000000000164},
      RoundingRadius->0], RectangleBox[{0.185, 0}, {0.19, 3.1599999999999975},
      RoundingRadius->0], RectangleBox[{0.19, 0}, {0.195, 1.9199999999999986},
      RoundingRadius->0], RectangleBox[{0.195, 0}, {0.2, 1.7599999999999987},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.20500000000000002, 1.0399999999999991},
      RoundingRadius->0], RectangleBox[{0.20500000000000002, 0}, {0.21000000000000002, 0.8399999999999993},
      RoundingRadius->0], RectangleBox[{0.21000000000000002, 0}, {0.21500000000000002, 0.31999999999999973},
      RoundingRadius->0], RectangleBox[{0.21500000000000002, 0}, {0.22, 0.16000000000000075},
      RoundingRadius->0], RectangleBox[{0.22, 0}, {0.225, 0.11999999999999991},
      RoundingRadius->0], RectangleBox[{0.225, 0}, {0.23, 0.07999999999999993},
      RoundingRadius->0], RectangleBox[{0.23500000000000001, 0}, {0.24, 0.04000000000000019},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"u\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  AxesOrigin->{0.036000000000000004`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.04, 0.24}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8299100779298773`*^9, 3.8299100870701694`*^9}, 
   3.8299106072287083`*^9, 3.829910737791073*^9, {3.8299127763700533`*^9, 
   3.8299128350625105`*^9}, 3.8299128821030445`*^9, 3.8302451429377103`*^9, 
   3.830245177140334*^9, 3.8302452163761873`*^9, {3.8302453262917075`*^9, 
   3.8302453450189037`*^9}, 3.830246293371315*^9, 3.8302505249873333`*^9, 
   3.830251147947174*^9, 3.830251679761505*^9, 3.8302521018544574`*^9, 
   3.83097225535297*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison of pdfs", "Subsubsection",
 CellChangeTimes->{{3.829846249938589*^9, 3.8298462627145414`*^9}, {
  3.8298463175977316`*^9, 3.829846320777439*^9}, {3.829846759663087*^9, 
  3.829846762396841*^9}, {3.829909808940049*^9, 3.829909815383072*^9}, {
  3.829910171478684*^9, 3.829910186862052*^9}, {3.8309719042159014`*^9, 
  3.8309719207864265`*^9}, {3.8309731761376104`*^9, 3.830973178027686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "upca"}], "}"}], ",", 
   RowBox[{"{", "0.01", "}"}], ",", "\"\<PDF\>\"", ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<FULL\>\"", ",", "\"\<PCA\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<u\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.830971923129621*^9, 3.8309719527585764`*^9}, {
  3.830972350253137*^9, 3.8309724363201694`*^9}, {3.830972751012836*^9, 
  3.830972764819721*^9}, {3.8309731052237244`*^9, 3.8309731054424047`*^9}, {
  3.830973143020932*^9, 3.830973168162777*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5319999999999999]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.02, 0.}, {0.03, 0.020000000000000004`}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.020000000000000004`]& , TagBoxNote -> 
               "0.020000000000000004"], 
              StyleBox["0.020000000000000004`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.020000000000000004`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.03, 0.}, {0.04, 0.09999999999999999}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.09999999999999999]& , TagBoxNote -> 
               "0.09999999999999999"], 
              StyleBox["0.09999999999999999`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.09999999999999999, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.04, 0.}, {0.05, 0.18}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 0.18]& , TagBoxNote -> "0.18"], 
              StyleBox["0.18`", {}, StripOnInput -> False]], Annotation[#, 
              Style[0.18, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.06, 0.8600000000000005}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.8600000000000005]& , TagBoxNote -> 
               "0.8600000000000005"], 
              StyleBox["0.8600000000000005`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.8600000000000005, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.06, 0.}, {0.07, 2.2399999999999984`}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 2.2399999999999984`]& , TagBoxNote -> 
               "2.2399999999999984"], 
              StyleBox["2.2399999999999984`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[2.2399999999999984`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.07, 0.}, {0.08, 4.9200000000000035`}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4.9200000000000035`]& , TagBoxNote -> 
               "4.9200000000000035"], 
              StyleBox["4.9200000000000035`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[4.9200000000000035`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.08, 0.}, {0.09000000000000001, 
                   9.279999999999994}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9.279999999999994]& , TagBoxNote -> 
               "9.279999999999994"], 
              StyleBox["9.279999999999994`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[9.279999999999994, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.09000000000000001, 0.}, {0.1, 
                   14.40000000000001}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 14.40000000000001]& , TagBoxNote -> 
               "14.40000000000001"], 
              StyleBox["14.40000000000001`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[14.40000000000001, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.11, 17.14000000000001}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 17.14000000000001]& , TagBoxNote -> 
               "17.14000000000001"], 
              StyleBox["17.14000000000001`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[17.14000000000001, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.11, 0.}, {0.12000000000000001`, 
                   17.699999999999985`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 17.699999999999985`]& , TagBoxNote -> 
               "17.699999999999985"], 
              StyleBox["17.699999999999985`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[17.699999999999985`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.12000000000000001`, 0.}, {0.13, 
                   14.32000000000001}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 14.32000000000001]& , TagBoxNote -> 
               "14.32000000000001"], 
              StyleBox["14.32000000000001`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[14.32000000000001, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.13, 0.}, {0.13999999999999999`, 
                   9.760000000000018}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9.760000000000018]& , TagBoxNote -> 
               "9.760000000000018"], 
              StyleBox["9.760000000000018`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[9.760000000000018, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.13999999999999999`, 0.}, {0.15, 
                   5.499999999999996}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 5.499999999999996]& , TagBoxNote -> 
               "5.499999999999996"], 
              StyleBox["5.499999999999996`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[5.499999999999996, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15, 0.}, {0.16, 2.519999999999998}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 2.519999999999998]& , TagBoxNote -> 
               "2.519999999999998"], 
              StyleBox["2.519999999999998`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[2.519999999999998, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.16, 0.}, {0.16999999999999998`, 
                   0.8600000000000017}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.8600000000000017]& , TagBoxNote -> 
               "0.8600000000000017"], 
              StyleBox["0.8600000000000017`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.8600000000000017, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.16999999999999998`, 0.}, {0.18, 
                   0.19999999999999982`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.19999999999999982`]& , TagBoxNote -> 
               "0.19999999999999982"], 
              StyleBox["0.19999999999999982`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.19999999999999982`, {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.04, 0.}, {0.05, 0.05999999999999999}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.05999999999999999]& , TagBoxNote -> 
               "0.05999999999999999"], 
              StyleBox["0.05999999999999999`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.05999999999999999, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.06, 0.12000000000000008`}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.12000000000000008`]& , TagBoxNote -> 
               "0.12000000000000008"], 
              StyleBox["0.12000000000000008`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.12000000000000008`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.06, 0.}, {0.07, 0.39999999999999963`}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.39999999999999963`]& , TagBoxNote -> 
               "0.39999999999999963"], 
              StyleBox["0.39999999999999963`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.39999999999999963`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.07, 0.}, {0.08, 1.0000000000000007`}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1]& , TagBoxNote -> 
               "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.08, 0.}, {0.09000000000000001, 
                   2.0999999999999983`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 2.0999999999999983`]& , TagBoxNote -> 
               "2.0999999999999983"], 
              StyleBox["2.0999999999999983`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[2.0999999999999983`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.09000000000000001, 0.}, {0.1, 
                   4.460000000000003}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4.460000000000003]& , TagBoxNote -> 
               "4.460000000000003"], 
              StyleBox["4.460000000000003`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[4.460000000000003, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.11, 7.280000000000005}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 7.280000000000005]& , TagBoxNote -> 
               "7.280000000000005"], 
              StyleBox["7.280000000000005`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[7.280000000000005, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.11, 0.}, {0.12000000000000001`, 
                   9.879999999999992}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9.879999999999992]& , TagBoxNote -> 
               "9.879999999999992"], 
              StyleBox["9.879999999999992`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[9.879999999999992, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.12000000000000001`, 0.}, {0.13, 
                   13.12000000000001}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 13.12000000000001]& , TagBoxNote -> 
               "13.12000000000001"], 
              StyleBox["13.12000000000001`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[13.12000000000001, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.13, 0.}, {0.13999999999999999`, 
                   14.860000000000026`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 14.860000000000026`]& , TagBoxNote -> 
               "14.860000000000026"], 
              StyleBox["14.860000000000026`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[14.860000000000026`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.13999999999999999`, 0.}, {0.15, 
                   13.99999999999999}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 14]& , TagBoxNote -> "14"], 
              StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
              Style[14, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15, 0.}, {0.16, 11.21999999999999}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 11.21999999999999]& , TagBoxNote -> 
               "11.21999999999999"], 
              StyleBox["11.21999999999999`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[11.21999999999999, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.16, 0.}, {0.16999999999999998`, 
                   9.060000000000018}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9.060000000000018]& , TagBoxNote -> 
               "9.060000000000018"], 
              StyleBox["9.060000000000018`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[9.060000000000018, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.16999999999999998`, 0.}, {0.18, 
                   5.999999999999996}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 6]& , TagBoxNote -> "6"], 
              StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
              Style[6, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.18, 0.}, {0.19, 3.299999999999997}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 3.299999999999997]& , TagBoxNote -> 
               "3.299999999999997"], 
              StyleBox["3.299999999999997`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[3.299999999999997, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.19, 0.}, {0.19999999999999998`, 
                   1.8400000000000034`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 1.8400000000000034`]& , TagBoxNote -> 
               "1.8400000000000034"], 
              StyleBox["1.8400000000000034`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[1.8400000000000034`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.19999999999999998`, 0.}, {0.21, 
                   0.9399999999999993}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.9399999999999993]& , TagBoxNote -> 
               "0.9399999999999993"], 
              StyleBox["0.9399999999999993`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.9399999999999993, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.21, 0.}, {0.22, 0.23999999999999982`}, 
                   "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.23999999999999982`]& , TagBoxNote -> 
               "0.23999999999999982"], 
              StyleBox["0.23999999999999982`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.23999999999999982`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.22, 0.}, {0.22999999999999998`, 
                   0.10000000000000019`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.10000000000000019`]& , TagBoxNote -> 
               "0.10000000000000019"], 
              StyleBox["0.10000000000000019`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.10000000000000019`, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.22999999999999998`, 0.}, {0.24, 
                   0.019999999999999983`}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 0.019999999999999983`]& , TagBoxNote -> 
               "0.019999999999999983"], 
              StyleBox["0.019999999999999983`", {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[0.019999999999999983`, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"u\"", TraditionalForm], None}, AxesOrigin -> {0.0156, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0.02, 0.24}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FULL\"", "\"PCA\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5319999999999999]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5319999999999999]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.830972309845789*^9, 3.8309723528583083`*^9, {3.8309724102686415`*^9, 
   3.830972446737949*^9}, {3.8309727557641006`*^9, 3.8309727654752645`*^9}, {
   3.830973106925811*^9, 3.8309731096831923`*^9}, {3.830973151847331*^9, 
   3.830973169177785*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 646},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 267, 6, 111, "Section"],
Cell[CellGroupData[{
Cell[872, 32, 356, 5, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1253, 41, 117, 1, 39, "Subsubsection"],
Cell[1373, 44, 2090, 37, 88, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3500, 86, 134, 1, 39, "Subsubsection"],
Cell[3637, 89, 5184, 142, 259, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8858, 236, 125, 1, 39, "Subsubsection"],
Cell[8986, 239, 848, 19, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9871, 263, 121, 1, 39, "Subsubsection"],
Cell[9995, 266, 2256, 58, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12288, 329, 132, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[12445, 334, 927, 17, 30, "Input"],
Cell[13375, 353, 19677, 331, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33101, 690, 122, 1, 39, "Subsubsection"],
Cell[33226, 693, 1304, 28, 50, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34567, 726, 243, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[34835, 733, 433, 6, 69, "Input"],
Cell[35271, 741, 1842, 25, 30, "Output"],
Cell[37116, 768, 1844, 25, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39009, 799, 116, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[39150, 804, 1268, 29, 107, "Input"],
Cell[40421, 835, 151487, 2514, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191957, 3355, 116, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[192098, 3360, 1302, 30, 107, "Input"],
Cell[193403, 3392, 143220, 2379, 234, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336684, 5778, 157, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[336866, 5784, 129, 1, 39, "Subsubsection"],
Cell[336998, 5787, 7144, 202, 373, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344179, 5994, 182, 2, 39, "Subsubsection"],
Cell[344364, 5998, 23327, 734, 1323, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367728, 6737, 171, 2, 39, "Subsubsection"],
Cell[367902, 6741, 2352, 47, 202, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370291, 6793, 163, 2, 39, "Subsubsection"],
Cell[370457, 6797, 1269, 31, 107, "Input"],
Cell[371729, 6830, 1014, 21, 107, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372780, 6856, 210, 3, 39, "Subsubsection"],
Cell[372993, 6861, 937, 23, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373967, 6889, 209, 3, 39, "Subsubsection"],
Cell[374179, 6894, 1731, 43, 297, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375947, 6942, 262, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[376234, 6949, 918, 22, 30, "Input"],
Cell[377155, 6973, 173, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377365, 6981, 129, 3, 30, "Input"],
Cell[377497, 6986, 94, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377628, 6992, 446, 9, 30, "Input"],
Cell[378077, 7003, 11646, 335, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389772, 7344, 301, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[390098, 7352, 571, 11, 30, "Input"],
Cell[390672, 7365, 4061, 62, 251, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[394794, 7434, 220, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[395039, 7441, 261, 3, 39, "Subsubsection"],
Cell[395303, 7446, 364, 11, 30, "Input"],
Cell[CellGroupData[{
Cell[395692, 7461, 107, 2, 30, "Input"],
Cell[395802, 7465, 222, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396061, 7475, 295, 6, 30, "Input"],
Cell[396359, 7483, 273, 6, 30, "Output"]
}, Open  ]],
Cell[396647, 7492, 425, 11, 30, "Input"],
Cell[397075, 7505, 1381, 32, 88, "Input"],
Cell[CellGroupData[{
Cell[398481, 7541, 205, 3, 50, "Input"],
Cell[398689, 7546, 220, 4, 30, "Output"],
Cell[398912, 7552, 193, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399142, 7560, 575, 12, 50, "Input"],
Cell[399720, 7574, 273, 6, 30, "Output"],
Cell[399996, 7582, 249, 5, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[400294, 7593, 209, 3, 39, "Subsubsection"],
Cell[400506, 7598, 2231, 54, 354, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402774, 7657, 262, 3, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[403061, 7664, 1345, 27, 30, "Input"],
Cell[404409, 7693, 577, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405023, 7706, 647, 12, 30, "Input"],
Cell[405673, 7720, 14336, 407, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[420058, 8133, 301, 4, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[420384, 8141, 624, 11, 30, "Input"],
Cell[421011, 8154, 4931, 73, 251, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425991, 8233, 407, 5, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[426423, 8242, 655, 14, 30, "Input"],
Cell[427081, 8258, 90959, 1872, 235, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

